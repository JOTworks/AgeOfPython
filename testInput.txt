;--------------------------------------------------------------
;                       housing
;--------------------------------------------------------------

(defconst gl-temp-1 498)
(defconst gl-temp-2 497)
(defconst loop-limit-house 496)
(defconst loop-reset-house 495)
(defconst house-timer 49)

(set-goal gl-temp-2 0)

if (True):
    (set-goal loop-reset-house 1)
    (enable-timer house-timer 1)
    (disable-self)

if (up-timer-status house-timer <= timer-triggered)
(can-build house)
(housing-headroom < 4)
(goal loop-reset-house 1):
    (chat-to-all "Build a houseWall!")
    (enable-timer house-timer 40) 
    (up-find-local c: town-center c: 1)
    (up-set-target-object search-local c: 0)	
    (up-get-point position-object gl-point3-x)
    (up-get-point position-object gl-point2-x)
    (up-modify-goal gl-point3-x c:- 7)
    (up-modify-goal gl-point3-y c:- 1)
    (up-modify-goal gl-point2-x c:- 7)
    (up-modify-goal gl-point2-y c:- 1)
    (up-get-fact building-type-count-total house gl-temp-1)
    (up-get-fact building-type-count-total house gl-temp-2)
    (set-goal loop-limit-house 0)
    (set-goal loop-reset-house 0)

if (can-build-house) (houseing-headroom < 4) (goal loop-rest-house 0) #finds wood if none close to unit
(up-compare-goal loop-limit-house < 30):
    (up-build-line gl-point3-x gl-point3-x c: house)
    (up-modify-goal gl-point3-x c:+ 2)
    (up-modify-goal loop-limit-house c:+ 1)
    (up-get-fact building-type-count-total house gl-temp-2)
    (up-chat-data-to-player my-player-number "ran loop: %d" g: loop-limit-house)

    (up-chat-data-to-player my-player-number "house 1: %d" g: gl-temp-1)
    (up-chat-data-to-player my-player-number "house 2: %d" g: gl-temp-2)
 
if (up-compare-goal gl-temp-2 g:!= gl-temp-1) (goal loop-reset-house 0):
    (set-goal loop-reset-house 1)
    (up-chat-data-to-player my-player-number "houses: %d" g: gl-temp-2)
