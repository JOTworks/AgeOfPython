#------boar stuff------------------
g-boar-id = Const(13)         ;Goal 13
g-boar-status = Const(14)     ;Goal 14
gv-need-boar = Const(-1)
gv-boar-found = Const(1)
gv-boar-picked = Const(2)
gv-boar-lured = Const(3)
gv-boar-eaten = Const(4)
gv-boar-targeted = Const(5)
gv-boar-killed = Const(6)
g-boar-food-left = Const(15)  ;Goal 15

#Largely taken from Tribal Warrior
#**************************************************************************
# --------------------------------LURE BOAR--------------------------------
#**************************************************************************
#if (true):
#  (up-modify-goal g-math-C g:= g-code-pass)
#  (up-modify-goal g-math-C c:mod 2)
#  (up-modify-goal g-math-D g:= g-code-pass)
#  (up-modify-goal g-math-D c:mod 5)

if (up-compare-goal g-boar-id != -1)(current-age >= feudal-age):
  (set-goal g-boar-id -1)

if (true):
  (up-full-reset-search)
  (up-find-local c: town-center c: 1)
  (up-set-target-object search-local c: 0)
  (up-get-point position-object g-self-point-x)
  (up-get-object-data object-data-id g-tc-id)
  (set-goal g-boar-food-left -1)

if (true):
  (up-chat-data-to-self "My X: %d" g: g-self-point-x)
  (up-chat-data-to-self "My Y: %d" g: g-self-point-y)
  (disable-self)

if (up-compare-goal g-boar-id != -1)( or (unit-type-count villager-class >= 10)( and (unit-type-count villager-class >= 8 )( unit-type-count sheep <= 1 ))):  
  (up-full-reset-search)
  (up-set-target-by-id g: g-boar-id) 
  (up-get-object-data object-data-carry g-boar-food-left)

#We flag that the boar is low on food and set filters to find the next one
if (or(unit-type-count villager-class >= 10)(and(unit-type-count villager-class >= 8)(unit-type-count sheep <= 1)))(dropsite-min-distance live-boar < 33)
(or(unit-type-count-total villager-hunter == 0)(and(up-compare-goal g-boar-food-left c:<= 120)(up-compare-goal g-boar-food-left > -1))):
  (up-full-reset-search)
  (set-strategic-number sn-focus-player-number 0)
  (up-set-target-point g-self-point-x)
  (up-filter-distance c: 6 c: 32)
  (set-goal g-boar-status gv-boar-eaten)

#Finding the next boar when the current one is low on food, ignore anything with less food than a normal boar (changed to 200 to rule in boars with a resource delta).
if (goal g-boar-status gv-boar-eaten)(up-find-remote c: boar-class c: 1):
  (up-remove-objects search-remote object-data-carry < 200)
  (up-set-target-object search-remote c: 0)
  (up-get-object-data object-data-id g-boar-id)
  (set-goal g-boar-status gv-boar-picked)

#If our target boar isn't attacking anything we find a villager near the TC
if (up-compare-goal g-boar-id != -1)(up-object-data object-data-action != actionid-attack):
  (up-reset-search 1 1 0 0)
  (up-reset-filters)
  (up-set-target-point g-self-point-x)
  (up-filter-distance c: -1 c: 32)
  (up-find-local c: villager-class c: 1)

#We find a new villager if the current villager is wounded or building something, this loops until we find a suitable villager
#if (up-set-target-object search-local c: 0)
#(or(or(and(up-object-data object-data-hitpoints < 40)(up-research-status c: ri-loom >= research-pending))(up-object-data object-data-hitpoints < 25))(up-object-data object-data-action == actionid-build)):
#  (up-reset-search 0 1 0 0)
#  (up-find-local c: villager-class c: 1)
#  (up-jump-rule -1)

if (unit-type-count villager-class > 6)
#(goal g-math-D 1)
(dropsite-min-distance live-boar < 33)
(up-compare-goal g-boar-id != -1)
(up-object-data object-data-action != actionid-attack)
(up-set-target-object search-local c: 0):
  (up-reset-filters)
  (up-remove-objects search-local object-data-tasks-count > 0)
  (up-set-target-by-id g: g-boar-id)
  (up-target-objects 1 action-default -1 -1)
  (chat-local-to-self "Sending for boar")  

#===============================================================
#-----------------TARGETTING THE BOAR---------------------------
#===============================================================

if (unit-type-count villager-class > 6)(up-compare-goal g-boar-id < 1)(building-type-count town-center > 0)(dropsite-min-distance live-boar < 9):
  (set-strategic-number sn-focus-player-number 0)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-distance c: -1 c: 9)
  (set-goal g-boar-status gv-boar-targeted)

if (goal g-boar-status gv-boar-targeted)(up-find-remote c: boar-class c: 1):
  (up-remove-objects search-remote object-data-carry < 340)
  (up-set-target-object search-remote c: 0)
  (up-get-point position-object g-object-point-x)
  (up-get-object-data object-data-id g-boar-id)

if (or  (dropsite-min-distance live-boar < 8)(up-compare-goal g-boar-id != -1)):
  (up-full-reset-search)
  (up-set-target-by-id g: g-boar-id)
  (up-get-point position-object g-object-point-x)

if (unit-type-count villager-class > 6)(dropsite-min-distance live-boar < 6)(dropsite-min-distance live-boar != -1)(up-point-distance g-object-point-x g-self-point-x < 8)(up-point-contains g-object-point-x c: boar-class):
  (up-full-reset-search)
  (up-set-target-point g-object-point-x)
  (up-filter-distance c: 1 c: 8)
  (up-find-local c: male-shepherd c: 5)
  (up-find-local c: female-shepherd c: 5)
  (up-find-local c: male-hunter c: 5)
  (up-find-local c: female-hunter c: 5)
  (up-find-local c: female-farmer c: 5)
  (up-set-target-object search-local c: 0)
  (up-get-search-state g-local-total)
  (set-goal g-boar-status gv-boar-killed)

if (up-train-site-ready c: villager)(goal g-boar-status gv-boar-killed)(food-amount < 50): #(goal g-math-C 1)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-range -1 -1 -1 10)
  (up-find-local c: male-shepherd c: 3)
  (up-find-local c: female-shepherd c: 3)
  (up-find-local c: male-hunter c: 3)
  (up-find-local c: female-forager c: 3)
  (up-find-local c: male-forager c: 3)
  (up-find-local c: female-hunter c: 3)
  (up-remove-objects search-local object-data-tasks-count > 0)
  (up-set-target-by-id g: g-tc-id)
  (up-target-objects 1 action-default -1 -1)

if (up-train-site-ready c: villager)(goal g-boar-status gv-boar-killed)(food-amount < 50): #(goal g-math-C 1)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-range -1 -1 -1 10)
  (up-find-local c: male-farmer c: 3)
  (up-find-local c: female-farmer c: 3)
  (up-set-target-by-id g: g-tc-id)
  (up-target-objects 1 action-default -1 -1)

if (up-train-site-ready c: villager)(goal g-boar-status gv-boar-killed)(food-amount < 50): #(goal g-math-D 1)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-range -1 -1 -1 10)
  (up-find-local c: male-shepherd c: 3)
  (up-find-local c: female-shepherd c: 3)
  (up-find-local c: male-hunter c: 3)
  (up-find-local c: female-forager c: 3)
  (up-find-local c: male-forager c: 3)
  (up-find-local c: female-hunter c: 3)
  (up-remove-objects search-local object-data-tasks-count > 0)
  (up-set-target-by-id g: g-tc-id)
  (up-target-objects 1 action-default -1 -1)

if (up-train-site-ready c: villager)(goal g-boar-status gv-boar-killed)(food-amount < 50): #(goal g-math-D 1)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-range -1 -1 -1 10)
  (up-find-local c: male-farmer c: 3)
  (up-find-local c: female-farmer c: 3)
  (up-set-target-by-id g: g-tc-id)
  (up-target-objects 1 action-default -1 -1)

if (up-compare-goal g-boar-food-left c:> 1)
(or(unit-type-count male-hunter < 3)(unit-type-count female-hunter < 3))
(up-point-distance g-object-point-x g-self-point-x < 5)
(or  (unit-type-count villager-class <= 6)(or  (dropsite-min-distance live-boar == -1)(dropsite-min-distance live-boar >= 6))):  #(goal g-math-C 1)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-range -1 -1 -1 10)
  (up-find-local c: male-shepherd c: 3)
  (up-find-local c: female-shepherd c: 3)
  (up-find-local c: female-forager c: 3)
  (up-find-local c: male-forager c: 3)
  (up-remove-objects search-local object-data-tasks-count > 0)
  (up-set-target-by-id g: g-boar-id)
  (up-target-objects 1 action-default -1 -1)

#SAVING SILLY VILLS FROM BOAR
if (unit-type-count villager > 9)(dropsite-min-distance live-boar <= 12)(dropsite-min-distance live-boar > -1):
  #(up-modify-sn sn-focus-player-number c:= my-player-number)
  (up-full-reset-search)
  (up-set-target-point g-self-point-x)
  (up-filter-distance c: -1 c: 12)
  (up-find-local c: villager-class c: 20)
  (up-remove-objects search-local object-data-tasks-count <= 0)
  (up-remove-objects search-local object-data-hitpoints > 16)
  (up-set-target-object search-local c: 0)
  (up-find-remote c: town-center c: 1)
  (up-set-target-object search-remote c: 0)
  (up-target-objects 1 action-garrison -1 -1)