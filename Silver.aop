;region Defining Constants *************************************************************
(load "Silver/UserPatchConst")

(defconst FC-num-dark-villagers 26) 
(defconst rush-num-dark-villagers 23)
(defconst max-num-feudal-swords 4)
(defconst max-num-feudal-archers 6)
(defconst attack-group-size-crossbows 12)
(defconst reinforce-group-size-crossbows 18)

;Control Group constants
(defconst front-attack-group 1)

;Goals regarding our age
(defconst sn-military-superiority 215)

(defconst g-age-status 1)        ;Goal 1
(defconst gv-dark-age 0)
(defconst gv-advancing-to-feudal 1)
(defconst gv-feudal-age 2)
(defconst gv-advancing-to-castle 3)
(defconst gv-castle-age 4)
(defconst gv-advancing-to-imperial 5)
(defconst gv-imperial-age 6)

(defconst g-tsa 2)               ;Goal 2
(defconst t-gather-idle-soldiers 1)  
(defconst tv-gather-idle-soldiers 15) 
(defconst g-train-villager 3)   ;Goal 3
(defconst g-train-sword 4)      ;Goal 4
(defconst g-train-spear 5)      ;Goal 5
(defconst g-train-skirm 6)      ;Goal 6
(defconst g-train-unique 7)     ;Goal 7
(defconst g-train-knight 8)     ;Goal 8
(defconst g-unique-unit-type 9) ;Goal 9
(defconst gv-infantry 0)        
(defconst gv-archer 1)          
(defconst gv-cavalry 2)         
(defconst gv-cav-archer 3)      
(defconst g-want-next-age 10)   ;Goal 10
(defconst g-need-siege 11)      ;Goal 11 

(defconst g-feudal-strat 12)    ;Goal 12
(defconst gv-man-at-arms-rush 0)
(defconst gv-archer-rush 1)
(defconst gv-scout-rush 2)
(defconst gv-fast-castle 3)
(defconst gv-tower-rush 4)

(defconst g-boar-id 13)         ;Goal 13
(defconst g-boar-status 14)     ;Goal 14
(defconst gv-need-boar -1)
(defconst gv-boar-found 1)
(defconst gv-boar-picked 2)
(defconst gv-boar-lured 3)
(defconst gv-boar-eaten 4)
(defconst gv-boar-targeted 5)
(defconst gv-boar-killed 6)
(defconst g-boar-food-left 15)  ;Goal 15

(defconst g-castle-strat 16)	;Goal 16
(defconst gv-longswords 0)
(defconst gv-crossbows 1)
(defconst gv-knights 2)
(defconst gv-boom 3)
(defconst gv-castle-drop 4)
(defconst gv-uu 5)
(defconst gv-siege 6)
(defconst gv-monks 7)

(defconst g-castle-secondary 17) ;Goal 17

(defconst g-attack-style 18)     ;Goal 18
(defconst gv-tap 2)	;Tech Advantage Patrol
(defconst gv-tsa 3)
(defconst gv-duc 4)  
(defconst t-reinforce-attack 2) ;timer 2
(defconst tv-two-minute 120)
(defconst t-resign 3)  ;timer 3
(defconst tv-resign-pause 10) 
   ;Goal 19
(defconst g-code-pass 20)				;Goal 20
(defconst gv-pass-one 1)
(defconst gv-pass-two 2)
(defconst gv-pass-three 3)
(defconst gv-pass-four 4)
(defconst gv-pass-five 5)
(defconst gv-pass-six 6)
(defconst gv-pass-seven 7)
(defconst gv-pass-eight 8)
(defconst gv-pass-nine 9)
(defconst gv-pass-ten 10)
(defconst g-target-enemy 21)      ;Goal 21
(defconst g-enemy-distance 22)    ;Goal 22
(defconst g-attack-stage 23)      ;Goal 23
(defconst gv-waiting 0)
(defconst gv-staged 1)
(defconst gv-targeted 2)
(defconst gv-sending 3)
(defconst gv-arrived 4)
(defconst gv-raiding 5)
(defconst gv-attacking 6)

(defconst g-tc-id 24)				;Goal 24

(defconst g-imperial-strat 25)	;Goal 25
(defconst gv-champions 0)
(defconst gv-arbalesters 1)
(defconst gv-paladins 2)
(defconst gv-gunpowder 3)
(defconst gv-castle-push 4)
(defconst gv-uu 5)
(defconst gv-siege 6)
(defconst gv-monks 7)

;********************** Mathematical Use Variables ***************************
(defconst g-math-A 80)			;Goal 80
(defconst g-math-B 81)			;Goal 81
(defconst g-math-C 82)			;Goal 82
(defconst g-math-D 83)			;Goal 83
(defconst g-math-E 84)			;Goal 84
(defconst g-math-F 85)			;Goal 85
(defconst g-math-G 86)			;Goal 86
(defconst g-math-H 87)			;Goal 87
(defconst g-math-I 88)			;Goal 88
(defconst g-math-J 89)			;Goal 89

(defconst g-local-total 100) ;Goal 100
(defconst g-local-last 101)  ;Goal 101
(defconst g-remote-total 102);Goal 102
(defconst g-remote-last 103) ;Goal 103

(defconst g-point-one-x 110)			;Goal 110
(defconst g-point-one-y 111)			;Goal 111
(defconst g-point-two-x 112)			;Goal 112
(defconst g-point-two-y 113)			;Goal 113

(defconst g-self-point-x 118)			;Goal 118
(defconst g-self-point-y 119)			;Goal 119
(defconst g-object-point-x 120)			;Goal 120
(defconst g-object-point-y 121)			;Goal 121
(defconst g-staging-point-x 122)		;Goal 122
(defconst g-staging-point-y 123)		;Goal 123
(defconst g-attack-focus-point-x 124)	;Goal 124
(defconst g-attack-focus-point-y 125)	;Goal 125
(defconst g-enemy-point-x 126)			;Goal 126
(defconst g-enemy-point-y 127)			;Goal 127
(defconst g-stage-point-x 128)			;Goal 128
(defconst g-stage-point-y 129)			;Goal 129
(defconst gl-center-x 130)				;Goal 130
(defconst gl-center-y 131)				;Goal 131

(defconst g-persona 500)		;Goal 500
(defconst gv-brutus 0)
(defconst gv-roo 1)
(defconst gv-xi-jinping 2)
(defconst gv-petigrew 3)
(defconst gv-lockjaw 4)
(defconst gv-jack 5)
(defconst gv-pennywise 6)
(defconst gv-wedge-antilles 7) ;changes people opportunistically
(defconst gv-st-germain 8) ;picks a role at the beginning and keeps it, but hidden
(defconst g-personality-1 501) ;Goal 501
(defconst g-personality-2 502) ;Goal 502
(defconst g-personality-3 503) ;Goal 503
(defconst g-personality-4 504) ;Goal 504
(defconst g-personality-5 505) ;Goal 505

;The following will also prove valuable for a number of future goals

(defconst gv-off 0)
(defconst gv-on 1)
(defconst gv-no 0)
(defconst gv-yes 1)

;civ defconsts
(defconst hindustanis 20)

(defrule
	(true)
	=>
	(set-goal g-target-enemy -1)
	(set-goal g-attack-style gv-tap)
	(set-goal g-enemy-distance -1)
	(set-goal g-attack-stage gv-waiting)
	(disable-self)
)

(defrule
	(true)
	=>
	(set-goal g-boar-id -1)
	(set-goal g-boar-status gv-need-boar)
	(set-goal g-code-pass gv-pass-one)
	(disable-self)
)

(defrule
   (true)
   =>
   (set-goal g-tsa gv-off)
   (enable-timer t-gather-idle-soldiers tv-gather-idle-soldiers)
   (set-goal g-train-villager gv-yes)
   (set-goal g-train-sword gv-no)
   (set-goal g-train-spear gv-no)
   (set-goal g-train-skirm gv-no)
   (set-goal g-train-unique gv-no)
   (set-goal g-train-knight gv-no)
   (set-goal g-want-next-age gv-no)
   (set-goal g-need-siege gv-no)
   (disable-self)
)



;Our first age status is that we are in the dark age. Post Imp games will require a different definition
(defrule
   (true)
   =>
   (set-goal g-age-status gv-dark-age)
   (disable-self)
)

(defconst villager 83)
(defconst villager-class 904)
(defconst female-gold-miner 579)
(defconst male-gold-miner 581)
(defconst female-shepherd 590)
(defconst male-shepherd 592)
(defconst male-farmer 259)
(defconst female-farmer 214)
(defconst female-hunter 216)
(defconst male-forager 120)
(defconst male-hunter 122)
(defconst female-forager 354)
(defconst scout-cavalry-line -286)
(defconst eagle-warrior-line -267)
(defconst boar 48)
(defconst sheep 958)

(defconst italian 19)
(defconst indian 20)
(defconst incan 21)
(defconst magyar 22)
(defconst slavic 23)
(defconst portuguese 24)
(defconst ethiopian 25)
(defconst malian 26)
(defconst berbers 27)
(defconst khmer 28)
(defconst malay 29)
(defconst burmese 30)
(defconst vietnamese 31)
(defconst bulgarians 32)
(defconst tatars 33)
(defconst cumans 34)
(defconst lithuanians 35)
(defconst burgundians 36)
(defconst sicilians 37)

;endregion

;region Strategy Picking ***************************************************************
(defrule
   (true)
   =>
   (set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (set-goal g-imperial-strat gv-arbalesters)
   (disable-self)
)
(defrule
   (civ-selected briton)
   =>
   (set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected frankish)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected gothic)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-longswords)
   (disable-self)
)
(defrule
	(civ-selected teutonic)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-longswords)
   (disable-self)
)
(defrule
	(civ-selected japanese)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected chinese)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected byzantine)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-boom)
   (disable-self)
)
(defrule
	(civ-selected persian)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected saracen)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected turkish)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected viking)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected mongol)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected celtic)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-siege)
   (disable-self)
)
(defrule
	(civ-selected spanish)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-castle-drop)
   (disable-self)
)
(defrule
	(civ-selected aztec)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-monks)
   (disable-self)
)
(defrule
	(civ-selected mayan)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected hun)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected korean)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected italian)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected indian)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected incan)
	=>
	(set-goal g-feudal-strat gv-tower-rush)
   (set-goal g-castle-strat gv-castle-drop)
   (disable-self)
)
(defrule
	(civ-selected magyar)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected slavic)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-siege)
   (disable-self)
)
(defrule
	(civ-selected portuguese)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected ethiopian)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected malian)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-longswords)
   (disable-self)
)
(defrule
	(civ-selected berbers)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected khmer)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected malay)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected burmese)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected vietnamese)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected bulgarians)
	=>
	(set-goal g-feudal-strat gv-man-at-arms-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected tatars)
	=>
	(set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (disable-self)
)
(defrule
	(civ-selected cumans)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected lithuanians)
	=>
	(set-goal g-feudal-strat gv-scout-rush)
   (set-goal g-castle-strat gv-knights)
   (disable-self)
)
(defrule
	(civ-selected burgundians)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-uu)
   (disable-self)
)
(defrule
	(civ-selected sicilians)
	=>
	(set-goal g-feudal-strat gv-fast-castle)
   (set-goal g-castle-strat gv-castle-drop)
   (disable-self)
)
(defrule
   (true)
   =>
   (set-goal g-feudal-strat gv-archer-rush)
   (set-goal g-castle-strat gv-crossbows)
   (set-goal g-imperial-strat gv-arbalesters)
   (disable-self)
)

;endregion

;region Defining Civs ******************************************************************
#load-if-defined BRITON-CIV
	(defconst starting-vills-on-sheep 5)
	(defconst my-scouting-unit scout-cavalry-line)
	(defconst text-my-civ "I am the Britons! I have a Scout Cavalry!")
#end-if
#load-if-not-defined BRITON-CIV
	(defconst starting-vills-on-sheep 6)
#end-if

#load-if-defined AZTEC-CIV
	(defconst my-scouting-unit eagle-warrior-line)
	(defconst text-my-civ "I am the Aztecs! I have an Eagle Scout!")
#end-if
;endregion

;region Personality Messages ***********************************************************

(defrule
	(true)
=>
	(up-change-name "Brutus")
	(chat-to-all "I am Brutus, you will fall before me!")
	(disable-self)
)
;endregion

;region Initial Strategic Numbers ******************************************************
; (defrule
	; (true)
; =>
	; (set-strategic-number sn-cap-civilian-explorers 10) ;default 2
	; (set-strategic-number sn-total-number-explorers 11) ; default 4, is a cap
	; (set-strategic-number sn-percent-civilian-explorers 100) ; % of villagers used to explore, 34% is default
	; (set-strategic-number sn-number-explore-groups 1) ;default 0, sets how many 
	; ;(chat-to-player my-player-number "Scouting with villagers and scout")
	; (disable-self)
; )
	
; (defrule
	; (unit-type-count livestock-class > 0)
; =>
	; (set-strategic-number sn-percent-civilian-explorers 0)
	; (set-strategic-number sn-cap-civilian-explorers 10)
	; (set-strategic-number sn-number-explore-groups 1)
	; (set-strategic-number sn-total-number-explorers 1)
	; ;(chat-to-player my-player-number "Found food, stop exploring with villagers.")
	; (disable-self)
; )

(defrule
   (true)
   =>
   (set-strategic-number sn-camp-max-distance 8)
   (set-strategic-number sn-initial-exploration-required 0)
   (set-strategic-number sn-food-dropsite-distance -1)
   (set-strategic-number sn-wood-dropsite-distance -1)
   (set-strategic-number sn-stone-dropsite-distance 100) ;priotitize gold over stone
   (set-strategic-number sn-gold-dropsite-distance 35)
   (set-strategic-number sn-maximum-food-drop-distance 15)
   (set-strategic-number sn-maximum-wood-drop-distance 15)
   (set-strategic-number sn-maximum-stone-drop-distance 25)
   (set-strategic-number sn-maximum-gold-drop-distance 25)
   (set-strategic-number sn-maximum-hunt-drop-distance 15)
   (set-strategic-number sn-maximum-fish-boat-drop-distance 15)
   (set-strategic-number sn-mill-max-distance 15)
   (set-strategic-number sn-cap-civilian-builders 100)
   (disable-self)
)

(defrule
   (true)
   =>
   (set-strategic-number sn-gold-defend-priority 1)
   (set-strategic-number sn-stone-defend-priority 0)
   (set-strategic-number sn-forage-defend-priority 0)
   (set-strategic-number sn-relic-defend-priority 0)
   (set-strategic-number sn-town-defend-priority 0)
   (set-strategic-number sn-dock-defend-priority 0)
   (set-strategic-number sn-task-ungrouped-soldiers 0) ;grouping up soldiers
   (set-strategic-number sn-gather-idle-soldiers-at-center 0) 
   (set-strategic-number sn-minimum-town-size 1)
   (set-strategic-number sn-maximum-town-size 16)
   (set-strategic-number sn-enemy-sighted-response-distance 2)
   (disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-cap-civilian-builders 100)
    (set-strategic-number sn-percent-civilian-builders 100)
	(disable-self)
)

(defrule
	(true)
=>
	(set-strategic-number sn-initial-exploration-required 0)
	(disable-self)
)


;region Market Usage *******************************************************************
;Sell wood if the it climbs and others are struggling
(defrule
   (current-age >= feudal-age)
   (wood-amount > 600)
   (or(gold-amount < 200)
      (food-amount < 800))
   (can-sell-commodity wood)
   =>
   (sell-commodity wood)
)

(defrule
   (current-age >= feudal-age)
   (wood-amount > 1000)
   (or(gold-amount < 800)
      (food-amount < 1000))
   (can-sell-commodity wood)
   =>
   (sell-commodity wood)
)

;Buy food if you have surplus gold.

(defrule
   (current-age >= feudal-age)
   (gold-amount > 400)
   (food-amount < 800)
   (can-buy-commodity food)
   =>
   (buy-commodity food)
)

;Sell food if you have surplus food.

(defrule
   (current-age >= feudal-age)
   (gold-amount < 200)
   (food-amount > 1200)
   (can-sell-commodity food)
   =>
   (sell-commodity food)
)

(defrule
   (current-age == castle-age)
   (gold-amount < 800)
   (food-amount > 1200)
   (can-sell-commodity food)
   =>
   (sell-commodity food)
)

;Buy wood if you have surplus gold.

(defrule
   (current-age >= feudal-age)
   (gold-amount > 800)
   (food-amount > 400)
   (wood-amount < 100)
   (can-buy-commodity wood)
   =>
   (buy-commodity wood)
)

;endregion

;region Programming (Sub-Categories: Economy, Research, Escrow, Building) **************

;region -----------> Economy Settings **************************************************
 (load "Silver/BoarHunt2")
;region -------------------> Civilian Explorers settings *******************************
(defrule
   (sheep-and-forage-too-far) ; Looks with 8 tiles of drop sites
   (not(resource-found food)) ;food == berries
   =>
   (set-strategic-number sn-percent-civilian-explorers 100)
   (set-strategic-number sn-minimum-civilian-explorers 100)
   (set-strategic-number sn-cap-civilian-explorers 100)
   (set-strategic-number sn-total-number-explorers 101)
   (set-strategic-number sn-number-explore-groups 101)
   (set-strategic-number sn-minimum-explore-group-size 1)
   (set-strategic-number sn-maximum-explore-group-size 1)
)

(defrule
   (or(not(sheep-and-forage-too-far))
      (resource-found food))
   =>
   (set-strategic-number sn-percent-civilian-explorers 0)
   (set-strategic-number sn-minimum-civilian-explorers 0)
   (set-strategic-number sn-cap-civilian-explorers 0)
   (set-strategic-number sn-total-number-explorers 1)
   (set-strategic-number sn-number-explore-groups 1)
)
;endregion
;region -------------------> Dark Age Food and Wood Balance ****************************
; Efficiently distribute villagers to food for low counts and slowly move them to wood. 
; No longer accounts for bonuses
(defrule
   (goal g-age-status gv-dark-age)
   =>
   (set-strategic-number sn-food-gatherer-percentage 100)
   (set-strategic-number sn-wood-gatherer-percentage 0)
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager == 7)
   =>
   (set-strategic-number sn-food-gatherer-percentage 85);6
   (set-strategic-number sn-wood-gatherer-percentage 15);1
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 8)
   =>
   (set-strategic-number sn-food-gatherer-percentage 75);6,7,7
   (set-strategic-number sn-wood-gatherer-percentage 25);2,2,3
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 11)
   =>
   (set-strategic-number sn-food-gatherer-percentage 69);8
   (set-strategic-number sn-wood-gatherer-percentage 31);3,4
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 13)
   =>
   (set-strategic-number sn-food-gatherer-percentage 70);9, 10
   (set-strategic-number sn-wood-gatherer-percentage 30);4
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 15)
   =>
   (set-strategic-number sn-food-gatherer-percentage 71);11
   (set-strategic-number sn-wood-gatherer-percentage 29);4, 5
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 17)
   =>
   (set-strategic-number sn-food-gatherer-percentage 63);11
   (set-strategic-number sn-wood-gatherer-percentage 37);6, 7
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 19)
   =>
   (set-strategic-number sn-food-gatherer-percentage 63);11, 12
   (set-strategic-number sn-wood-gatherer-percentage 37);8
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 21)
   =>
   (set-strategic-number sn-food-gatherer-percentage 63)
   (set-strategic-number sn-wood-gatherer-percentage 37);10
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 23)
   =>
   (set-strategic-number sn-food-gatherer-percentage 63)
   (set-strategic-number sn-wood-gatherer-percentage 37);10
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 25)
   =>
   (set-strategic-number sn-food-gatherer-percentage 61)
   (set-strategic-number sn-wood-gatherer-percentage 39);10
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 27)
   =>
   (set-strategic-number sn-food-gatherer-percentage 64)
   (set-strategic-number sn-wood-gatherer-percentage 36);10
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count villager >= 30)
   =>
   (set-strategic-number sn-food-gatherer-percentage 68)
   (set-strategic-number sn-wood-gatherer-percentage 32);10
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)
;endregion
;region -------------------> While Advancing to Feudal Eco Balance *********************

(defrule
   (goal g-age-status gv-dark-age)  
   (goal g-feudal-strat gv-archer-rush)
   (food-amount > 500)
   =>
   (set-strategic-number sn-food-gatherer-percentage 30)
   (set-strategic-number sn-wood-gatherer-percentage 70)
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-advancing-to-feudal)  
   (goal g-feudal-strat gv-man-at-arms-rush)
   =>
   (set-strategic-number sn-food-gatherer-percentage 40)
   (set-strategic-number sn-wood-gatherer-percentage 50)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-advancing-to-feudal) 
   (goal g-feudal-strat gv-man-at-arms-rush) 
   (building-type-count-total barracks > 1)
   =>
   (set-strategic-number sn-food-gatherer-percentage 55)
   (set-strategic-number sn-wood-gatherer-percentage 35)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-advancing-to-feudal)  
   (goal g-feudal-strat gv-archer-rush)
   =>
   (set-strategic-number sn-food-gatherer-percentage 30)
   (set-strategic-number sn-wood-gatherer-percentage 60)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (goal g-age-status gv-advancing-to-feudal) 
   (goal g-feudal-strat gv-archer-rush) 
   (building-type-count-total barracks > 0)
   =>
   (set-strategic-number sn-food-gatherer-percentage 30)
   (set-strategic-number sn-wood-gatherer-percentage 55)
   (set-strategic-number sn-gold-gatherer-percentage 15)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

;endregion
;region -------------------> Feudal Age Eco Balance ************************************
;region -------------------> Feudal M@A Eco Balance ****************************************
(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-man-at-arms-rush) 
   =>
   (set-strategic-number sn-food-gatherer-percentage 55)
   (set-strategic-number sn-wood-gatherer-percentage 35)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (current-age == feudal-age) 
   (goal g-feudal-strat gv-man-at-arms-rush) 
   (building-type-count-total blacksmith < 1)
   =>
   (set-strategic-number sn-food-gatherer-percentage 40)
   (set-strategic-number sn-wood-gatherer-percentage 50)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-man-at-arms-rush) 
   (building-type-count-total blacksmith > 0)
   (or(building-type-count-total archery-range > 0)
      (building-type-count-total market > 0))
   =>
   (set-strategic-number sn-food-gatherer-percentage 55)
   (set-strategic-number sn-wood-gatherer-percentage 30)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-man-at-arms-rush) 
   (building-type-count-total blacksmith > 0)
   (or(building-type-count-total archery-range > 0)
      (building-type-count-total market > 0))
   (wood-amount > 200)
   =>
   (set-strategic-number sn-food-gatherer-percentage 60)
   (set-strategic-number sn-wood-gatherer-percentage 20)
   (set-strategic-number sn-gold-gatherer-percentage 15)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-man-at-arms-rush) 
   (building-type-count-total blacksmith > 0)
   (or(building-type-count-total archery-range > 0)
      (building-type-count-total market > 0))
   (wood-amount > 200)
   (gold-amount > 200)
   =>
   (set-strategic-number sn-food-gatherer-percentage 65)
   (set-strategic-number sn-wood-gatherer-percentage 20)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)
;endregion 
;region -------------------> Feudal Archers Eco Balance ****************************************
(defrule
   (current-age == feudal-age)
   (goal g-feudal-strat gv-archer-rush)
   (building-type-count-total archery-range < 2)
   =>
   (set-strategic-number sn-food-gatherer-percentage 30)
   (set-strategic-number sn-wood-gatherer-percentage 50)
   (set-strategic-number sn-gold-gatherer-percentage 20)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (current-age == feudal-age) 
   (goal g-feudal-strat gv-archer-rush) 
   (building-type-count-total archery-range > 1)
   (building-type-count-total blacksmith < 1)
   =>
   (set-strategic-number sn-food-gatherer-percentage 35)
   (set-strategic-number sn-wood-gatherer-percentage 45)
   (set-strategic-number sn-gold-gatherer-percentage 20)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-archer-rush) 
   (building-type-count-total blacksmith > 0)
   =>
   (set-strategic-number sn-food-gatherer-percentage 35)
   (set-strategic-number sn-wood-gatherer-percentage 40)
   (set-strategic-number sn-gold-gatherer-percentage 25)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-archer-rush) 
   (building-type-count-total blacksmith > 0)
   (building-type-count-total market > 0)
   (wood-amount > 200)
   =>
   (set-strategic-number sn-food-gatherer-percentage 40)
   (set-strategic-number sn-wood-gatherer-percentage 40)
   (set-strategic-number sn-gold-gatherer-percentage 20)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

(defrule
   (current-age == feudal-age)  
   (goal g-feudal-strat gv-archer-rush) 
   (building-type-count-total blacksmith > 0)
   (building-type-count-total market > 0)
   (wood-amount > 200)
   (gold-amount > 200)
   =>
   (set-strategic-number sn-food-gatherer-percentage 50)
   (set-strategic-number sn-wood-gatherer-percentage 35)
   (set-strategic-number sn-gold-gatherer-percentage 15)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)
;endregion 
;endregion
;region -------------------> While Advancing to Castle Eco Balance *********************
(defrule
   (goal g-age-status gv-advancing-to-castle)  
   =>
   (set-strategic-number sn-food-gatherer-percentage 40)
   (set-strategic-number sn-wood-gatherer-percentage 30)
   (set-strategic-number sn-gold-gatherer-percentage 15)
   (set-strategic-number sn-stone-gatherer-percentage 15)
)

(defrule
   (goal g-age-status gv-advancing-to-castle)
   (goal g-castle-strat gv-crossbows)
   =>
   (set-strategic-number sn-food-gatherer-percentage 35)
   (set-strategic-number sn-wood-gatherer-percentage 45)
   (set-strategic-number sn-gold-gatherer-percentage 20)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)
;endregion
;region -------------------> Castle Age Eco Balance ************************************
(defrule
   (goal g-age-status gv-castle-age)
   =>
   (set-strategic-number sn-food-gatherer-percentage 45)
   (set-strategic-number sn-wood-gatherer-percentage 25)
   (set-strategic-number sn-gold-gatherer-percentage 25)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (goal g-age-status gv-castle-age)
   (wood-amount > 300)
   =>
   (set-strategic-number sn-food-gatherer-percentage 55)
   (set-strategic-number sn-wood-gatherer-percentage 15)
   (set-strategic-number sn-gold-gatherer-percentage 25)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (goal g-age-status gv-castle-age)
   (wood-amount > 300)
   (gold-amount > 800)
   =>
   (set-strategic-number sn-food-gatherer-percentage 65)
   (set-strategic-number sn-wood-gatherer-percentage 15)
   (set-strategic-number sn-gold-gatherer-percentage 15)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (goal g-age-status gv-castle-age)
   (goal g-castle-strat gv-crossbows)
   =>
   (set-strategic-number sn-food-gatherer-percentage 30)
   (set-strategic-number sn-wood-gatherer-percentage 45)
   (set-strategic-number sn-gold-gatherer-percentage 20)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (goal g-age-status gv-castle-age)
   (goal g-castle-strat gv-crossbows)
   (wood-amount > 300)
   =>
   (set-strategic-number sn-food-gatherer-percentage 35)
   (set-strategic-number sn-wood-gatherer-percentage 35)
   (set-strategic-number sn-gold-gatherer-percentage 25)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)

(defrule
   (goal g-age-status gv-castle-age)
   (goal g-castle-strat gv-crossbows)
   (wood-amount > 300)
   (gold-amount > 800)
   =>
   (set-strategic-number sn-food-gatherer-percentage 45)
   (set-strategic-number sn-wood-gatherer-percentage 35)
   (set-strategic-number sn-gold-gatherer-percentage 15)
   (set-strategic-number sn-stone-gatherer-percentage 5)
)
;endregion
;endregion 

;region -----------> Research **********************************************************
;region -------------------> Age Up ****************************************************
(defrule                                   
   (goal g-age-status gv-advancing-to-feudal)
   (research-available feudal-age)
   =>
   (chat-to-allies "Age research misfire!")
   (set-goal g-age-status gv-dark-age)
)

(defrule
   (can-research feudal-age)
   (or
		(unit-type-count-total villager >= rush-num-dark-villagers)
		(players-current-age any-enemy > dark-age)
	)
   =>
   (research feudal-age)
   (set-goal g-age-status gv-advancing-to-feudal) 
   (set-goal g-want-next-age gv-no)
   (chat-to-allies "Researching Feudal Age")
)

(defrule                        
   (current-age == feudal-age)
   =>
   (set-goal g-age-status gv-feudal-age)
   (disable-self)
)

(defrule                                      
   (goal g-age-status gv-advancing-to-castle)
   (research-available castle-age)
   =>
   (chat-to-allies "Age research misfire!")
   (set-goal g-age-status gv-feudal-age)
)

(defrule
   (can-research castle-age)
   =>
   (research castle-age)
   (set-goal g-age-status gv-advancing-to-castle) 
   (set-goal g-want-next-age gv-no)
   (chat-to-allies "Researching Castle Age")      
)

(defrule                       
   (current-age == castle-age)
   =>
   (set-goal g-age-status gv-castle-age)
   (set-goal g-want-next-age gv-no)
   (disable-self)
)

(defrule                                        
   (goal g-age-status gv-advancing-to-imperial)
   (research-available imperial-age)
   =>
   (chat-to-allies "Age research misfire!")
   (set-goal g-age-status gv-castle-age)
)

(defrule
   (can-research imperial-age)
   =>
   (research imperial-age)
   (set-goal g-age-status gv-advancing-to-imperial) 
   (set-goal g-want-next-age gv-no)
   (chat-to-allies "Researching Imperial Age")      
)

(defrule                        
   (current-age == imperial-age)
   =>
   (set-goal g-age-status gv-imperial-age)
   (set-goal g-want-next-age gv-no)
   (disable-self)
)
;endregion 
;region -------------------> M@A Rush, early to get M@A before eco *********************

(defrule
   (can-research ri-man-at-arms)
   (goal g-feudal-strat gv-man-at-arms-rush)
   =>
   (research ri-man-at-arms)
   (chat-to-allies "Researching man at arms.")
)
; (defrule        ;---> Removed supplies, we will get it if we really want them later
   ; (can-research ri-supplies)
   ; (not(research-available ri-man-at-arms))
   ; =>
   ; (research ri-supplies)
   ; (chat-to-allies "Researching supplies.")
; )
; (defrule      ;---> Removed armor, we don't want it for just 3 m@a
  ;  (not(research-available ri-man-at-arms))
  ;  (can-research ri-scale-mail)
  ;  (goal g-feudal-strat gv-man-at-arms-rush)
  ;  =>
  ;  (research ri-scale-mail)
  ;  (chat-to-allies "Researching scale mail armor.")
; )

; (defrule		;---> Removed forging, we don't want for just 3 m@a
  ;  (research-completed ri-scale-mail)
  ;  (can-research ri-forging)
  ;  (goal g-feudal-strat gv-man-at-arms-rush)
  ;  =>
  ;  (research ri-forging)
  ;  (chat-to-allies "Researching forging.")
; )
;endregion
;region -------------------> We get loom, everyone gets loom ***************************
;Chinese and Mayans should override my one house rule before loom to get it first

#load-if-defined MAYAN-CIV

(defrule
   (can-research ri-loom)
   =>
   (research ri-loom)
   (chat-to-allies "Researching loom.")
)

#end-if

#load-if-defined CHINESE-CIV

(defrule
   (can-research ri-loom)
   =>
   (research ri-loom)
   (chat-to-allies "Researching loom.")
)

#end-if


(defrule
   (can-research ri-loom)
   (or
	   (and
			(building-type-count-total house > 1)
			(or
				(and
					(not(can-build house))
					(housing-headroom < 1)
				)
				(food-amount < 50)
			)
		)
		(unit-type-count-total villager >= rush-num-dark-villagers)
	)
   =>
   (research ri-loom)
)
;endregion
;region -------------------> Feudal Eco Upgrades ***************************************
(defrule
	(can-research ri-double-bit-axe)
	(or(goal g-age-status gv-advancing-to-castle)
		(not(goal g-feudal-strat gv-fast-castle))) ;if not fast castle, or advancing to castle
	=>
	(research ri-double-bit-axe)
)

(defrule
	(can-research ri-horse-collar)
	(not(research-available ri-double-bit-axe))
	(or(goal g-age-status gv-advancing-to-castle)
		(not(goal g-feudal-strat gv-fast-castle))) ;if not fast castle, or advancing to castle
	=>
	(research ri-horse-collar)
)

(defrule
   (can-research ri-wheel-barrow)
   (unit-type-count-total villager >= 35)
   (or(goal g-age-status gv-advancing-to-castle)
		(not(goal g-feudal-strat gv-fast-castle))) ;if not fast castle, or advancing to castle
	=>
   (research ri-wheel-barrow)
)
;endregion
;region -------------------> Archer Rush ***********************************************
(defrule
	(goal g-feudal-strat gv-archer-rush)
	(can-research ri-fletching)
	=>
	(research ri-fletching)
)
(defrule
   (goal g-feudal-strat gv-archer-rush)
   (research-completed ri-fletching)								;get fletching before armor for archers if possible
   (food-amount > 150)
   (can-research ri-padded-archer-armor)
   =>
   (research ri-padded-archer-armor)
)
;endregion
(defrule
   (goal g-age-status gv-advancing-to-castle)
   (can-research ri-gold-mining)
   =>
   (research ri-gold-mining)
)

(defrule
   (goal g-train-skirm gv-yes)
   (can-research ri-padded-archer-armor)
   (food-amount > 150)
   =>
   (research ri-padded-archer-armor)
)

;Always get fletching for castles and TC
(defrule
   (or(timer-triggered t-gather-idle-soldiers) 
      (goal g-train-skirm gv-yes))
   (or(town-under-attack)
      (goal g-train-skirm gv-yes))
   (can-research ri-fletching)
   =>
   (research ri-fletching)
)

; TODO make this more sophisticated to be done when going for castle-based strategies
;(defrule
;   (or(current-age > feudal-age)
;       (goal g-age-status gv-advancing-to-castle))
;   (can-research ri-stone-mining)
;   =>
;   (research ri-stone-mining)
;)
;***************************** Castle Age Research ****************************

(defrule
	(can-research ri-crossbow)
	(goal g-castle-strat gv-crossbows)
	=>
	(research ri-crossbow)
)

(defrule
	(can-research ri-bodkin-arrow)
	(goal g-castle-strat gv-crossbows)
	=>
	(research ri-bodkin-arrow)
)

(defrule
	(can-research ri-ballistics)
	(research-completed ri-crossbow)
	(research-completed ri-bodkin-arrow)
	(goal g-castle-strat gv-crossbows)
	=>
	(research ri-ballistics)
)

(defrule
	(can-research ri-thumb-ring)
	(research-completed ri-crossbow)
	(research-completed ri-bodkin-arrow)
	(goal g-castle-strat gv-crossbows)
	=>
	(research ri-thumb-ring)
)

(defrule
   (can-research ri-hand-cart)
   (goal g-castle-strat gv-crossbows)
   (research-completed ri-crossbow)
	(research-completed ri-bodkin-arrow)
   =>
   (research ri-hand-cart)
   (chat-to-allies "Researching hand cart.")
)

(defrule
   (can-research ri-long-swordsman)
   (goal g-train-sword gv-yes)
   =>
   (research ri-long-swordsman)
   (chat-to-allies "Researching longswordsman.")
)

(defrule
   (goal g-train-spear gv-yes)
   (can-research ri-pikeman)
   =>
   (research ri-pikeman)
   (chat-to-allies "Researching pikeman.")
)

(defrule
   (goal g-train-skirm gv-yes)
   (can-research ri-elite-skirmisher)
   =>
   (research ri-elite-skirmisher)
   (chat-to-allies "Researching elite skirmisher.")
)

(defrule
   (goal g-train-skirm gv-yes)
   (can-research ri-imperial-skirmisher)
   =>
   (research ri-imperial-skirmisher)
   (chat-to-allies "Researching imperial skirmisher.")
)

(defrule
   (can-research ri-bow-saw)
   =>
   (research ri-bow-saw)
)

(defrule
   (can-research ri-gold-shaft-mining)
   (not(research-available ri-crossbow))
   (goal g-castle-strat gv-crossbows)
   =>
   (research ri-gold-shaft-mining)
)

(defrule
   (can-research ri-heavy-plow)
   (not(research-available ri-long-swordsman))
   (or (up-research-status c: ri-crossbow >= research-pending)
		(food-amount > 350))
   =>
   (research ri-heavy-plow)
)

(defrule
   (can-research ri-chain-mail)
   (not(research-available ri-long-swordsman))
   (goal g-train-sword gv-yes)
   =>
   (research ri-chain-mail)
   (chat-to-allies "Researching chain mail armor.")
)

(defrule
   (can-research ri-iron-casting)
   (not(research-available ri-chain-mail))
   (goal g-train-sword gv-yes)
   =>
   (research ri-iron-casting)
   (chat-to-allies "Researching iron casting.")
)

(defrule
   (can-research ri-squires)
   (not(research-available ri-long-swordsman))
   (goal g-train-sword gv-yes)
   (unit-type-count-total militiaman-line >= 10)
   =>
   (research ri-squires)
   (chat-to-allies "Researching squires.")
)

(defrule
   (can-research ri-arson)
   (not(research-available ri-squires))
   (goal g-train-sword gv-yes)
   (unit-type-count-total militiaman-line >= 20)
   =>
   (research ri-arson)
   (chat-to-allies "Researching arson.")
)

(defrule
   (or(building-type-count-total castle > 0)
      (building-type-count-total watch-tower-line > 0))
   (can-research ri-murder-holes)
   =>
   (research ri-murder-holes)
)

(defrule
   (or(and (goal g-train-skirm gv-yes)
			(not(research-available ri-elite-skirmisher)))
		(and (goal g-castle-strat gv-crossbows)
			(not(research-available ri-crossbow))))
   (can-research ri-leather-archer-armor)
   =>
   (research ri-leather-archer-armor)
   (chat-to-allies "Researching leather archer armor.")
)


(defrule
   (or(timer-triggered t-gather-idle-soldiers) 
      (goal g-train-skirm gv-yes))
   (or(town-under-attack)
      (goal g-train-skirm gv-yes))
   (can-research ri-bodkin-arrow)
   =>
   (research ri-bodkin-arrow)
   (chat-to-allies "Researching bodkin arrow.")
)

(defrule
   (can-research ri-stone-shaft-mining)
   (not(research-available ri-long-swordsman))
   =>
   (research ri-stone-shaft-mining)
   (chat-to-allies "Researching stone shaft mining.")
)

(defrule
   (unit-type-count-total scout-cavalry-line > 5)
   (can-research ri-light-cavalry)
   =>
   (research ri-light-cavalry)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 10)
   (can-research ri-hussar)
   =>
   (research ri-hussar)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 10)
   (can-research ri-winged-hussar)
   =>
   (research ri-winged-hussar)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 8)
   (can-research ri-scale-barding)
   =>
   (research ri-scale-barding)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 8)
   (can-research ri-bloodlines)
   =>
   (research ri-bloodlines)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 8)
   (can-research ri-forging)
   =>
   (research ri-forging)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 10)
   (can-research ri-chain-barding)
   =>
   (research ri-chain-barding)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 10)
   (can-research ri-iron-casting)
   =>
   (research ri-iron-casting)
)

(defrule
   (unit-type-count-total scout-cavalry-line >= 16)
   (can-research ri-husbandry)
   =>
   (research ri-husbandry)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 12)
   (can-research ri-plate-barding)
   =>
   (research ri-plate-barding)
)

(defrule
   (unit-type-count-total scout-cavalry-line > 20)
   (can-research ri-blast-furnace)
   =>
   (research ri-blast-furnace)
)

(defrule
	(can-research ri-masonry)
	=>
	(research ri-masonry)
)

(defrule
	(civ-selected italian)
	(goal g-castle-strat gv-crossbows)
	(can-research my-second-unique-research)
	=>
	(research my-second-unique-research)
)

(defrule
	(civ-selected briton)
	(goal g-castle-strat gv-crossbows)
	(can-research my-unique-research)
	=>
	(research my-unique-research)
)

(defrule
	(civ-selected persian)
	(goal g-castle-strat gv-crossbows)
	(can-research my-second-unique-research)
	=>
	(research my-second-unique-research)
)

(defrule
   (civ-selected bengalis)
   (can-research my-unique-research)
   (unit-type-count villager > 90)
   =>
   (research my-unique-research)
)

(defrule
   (civ-selected burgundians)
   (building-type-count farm > 30)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected hindustanis)
   (unit-type-count trade-cart > 20)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

;TODO Detect how many trees remaining before paper money
(defrule
   (civ-selected vietnamese)
   (can-research my-unique-research)
   =>
   (research my-unique-research)
)

(defrule
   (civ-selected gurjaras)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected lithuanians)
   (research-completed ri-elite-skirmisher)
   (research-completed ri-ring-archer-armor)
   (can-research my-unique-research)
   =>
   (research my-unique-research)
)

(defrule
   (civ-selected mayan)
   (research-completed ri-elite-skirmisher)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected incan)
   (research-completed ri-elite-skirmisher)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected aztec)
   (research-completed ri-elite-skirmisher)
   (research-completed ri-bodkin-arrow)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected malian)
   (can-research my-second-unique-research)
   (building-type-count town-center > 2)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected slavic)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

(defrule
   (civ-selected spanish)
   (can-research my-unique-research)
   =>
   (research my-unique-research)
)

(defrule
   (civ-selected teutonic)
   (can-research my-unique-research)
   =>
   (research my-unique-research)
)

(defrule
   (civ-selected celtic)
   (can-research my-second-unique-research)
   =>
   (research my-second-unique-research)
)

;************************ Imperial Age Research ***************************************
(defrule
	(can-research ri-bracer)
	(goal g-imperial-strat gv-arbalesters)
	=>
	(research ri-bracer)
)

(defrule
	(can-research ri-arbalest)
	(goal g-imperial-strat gv-arbalesters)
	=>
	(research ri-arbalest)
)

(defrule
	(can-research ri-chemistry)
	(goal g-imperial-strat gv-arbalesters)
	(or(up-research-status c: ri-arbalest >= research-pending)
		(not(research-available ri-arbalest)))
	(or(up-research-status c: ri-bracer >= research-pending)
		(not(research-available ri-bracer)))
	=>
	(research ri-chemistry)
)

(defrule
	(can-research ri-ring-archer-armor)
	(goal g-imperial-strat gv-arbalesters)
	(or(up-research-status c: ri-arbalest >= research-pending)
		(not(research-available ri-arbalest)))
	(or(up-research-status c: ri-bracer >= research-pending)
		(not(research-available ri-bracer)))
	=>
	(research ri-ring-archer-armor)
)

(defrule
   (can-research ri-two-handed-swordsman)
   (goal g-train-sword gv-yes)
   =>
   (research ri-two-handed-swordsman)
   (chat-to-allies "Researching two-handed swordsman.")
)

(defrule
   (can-research ri-champion)
   (goal g-train-sword gv-yes)
   =>
   (research ri-champion)
   (chat-to-allies "Researching champion.")
)

(defrule
   (can-research ri-plate-mail)
   (goal g-train-sword gv-yes)
   =>
   (research ri-plate-mail)
   (chat-to-allies "Researching plate mail armor.")
)
(defrule
   (can-research ri-blast-furnace)
   (goal g-train-sword gv-yes)
   (not(research-available ri-plate-mail))
   =>
   (research ri-blast-furnace)
   (chat-to-allies "Researching plate mail armor.")
)

(defrule
   (or(timer-triggered t-gather-idle-soldiers) 
      (goal g-train-skirm gv-yes))
   (or(town-under-attack)
      (goal g-train-skirm gv-yes))
   (can-research ri-bracer)
   =>
   (research ri-bracer)
   (chat-to-allies "Researching bracer.")
)

(defrule
	(can-research ri-conscription)
	=>
	(research ri-conscription)
)

(defrule
	(can-research ri-capped-ram)
	=>
	(research ri-capped-ram)
)
(defrule
	(can-research ri-siege-elephant)
	=>
	(research ri-siege-elephant)
)

;endregion

;region -----------> Building **********************************************************
;region -------------------> Generic Buildings *****************************************
(defrule
	(current-age == dark-age)
	(can-build house)
	(housing-headroom < 4)
 =>
	(build house)
)

(defrule
	(or(current-age > dark-age)
      (and(goal g-age-status gv-advancing-to-feudal)
          (building-type-count-total barracks > 0)))
   (housing-headroom < 10)
   (population-headroom > 3)
   (can-build house)
 =>
	(build house)
)

(defrule
   (game-time < 600)
   (sheep-and-forage-too-far)
   (not(resource-found food)) ;Haven't found the berries yet.
   (building-type-count-total mill == 0)
   =>
   (set-strategic-number sn-percent-civilian-explorers 100)
   (set-strategic-number sn-minimum-civilian-explorers 100)
   (set-strategic-number sn-cap-civilian-explorers 100)
   (set-strategic-number sn-total-number-explorers 101)
   (set-strategic-number sn-number-explore-groups 101)
   (set-strategic-number sn-minimum-explore-group-size 1)
   (set-strategic-number sn-maximum-explore-group-size 1)
)

(defrule
   (or(not(sheep-and-forage-too-far))
   (or(resource-found food)
      (building-type-count-total mill > 0)))
   (strategic-number sn-percent-civilian-explorers != 0)
   =>
   (set-strategic-number sn-percent-civilian-explorers 0)
   (set-strategic-number sn-minimum-civilian-explorers 0)
   (set-strategic-number sn-cap-civilian-explorers 0)
   (set-strategic-number sn-total-number-explorers 1)
   (set-strategic-number sn-number-explore-groups 1)
)

(defrule
   (or(building-type-count-total house > 1)
      (civ-selected hun))
   (building-type-count-total mill < 1)
   (or(resource-found food)
      (and(cc-players-unit-type-count 0 59 == 0) ;The map has no berries.
          (not(sheep-and-forage-too-far))))      ;first sheep
   (can-build mill)
   (unit-type-count villager > 9)
   =>
   (build mill)
)

(defrule
   (building-type-count-total blacksmith > 0)
   =>
   (set-strategic-number sn-mill-max-distance 35)
   (set-strategic-number sn-maximum-hunt-drop-distance 25)
   (disable-self)
)

(defrule
   (building-type-count-total blacksmith > 0)
   (or(unit-type-count 122 > 0)  ;Hunters
      (unit-type-count 216 > 0))
   (building-type-count-total mill < 3)
   (can-build mill)
   =>
   (build mill)
   (chat-local-to-self "Attempting to build mill for hunters.")
)


(defrule
   (current-age == feudal-age)
   (building-type-count-total blacksmith > 0)
   (building-type-count farm > 19)
   (building-type-count-total mill < 2)
   (can-build mill)
   =>
   (build mill)
   (chat-local-to-self "Attempting to build second Mill.")
)

;region Absurd lumber camp rules
;Stole this from BearTheGreat's Training AI. He says he got them from Elite Raider.
(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 4)
   =>
   (set-strategic-number sn-camp-max-distance 11)
   ;(chat-local-to-self "Camp distance 11.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 7)
   =>
   (set-strategic-number sn-camp-max-distance 13)
   ;(chat-local-to-self "Camp distance 13.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 12)
   =>
   (set-strategic-number sn-camp-max-distance 15)
   ;(chat-local-to-self "Camp distance 15.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 16)
   =>
   (set-strategic-number sn-camp-max-distance 17)
   ;(chat-local-to-self "Camp distance 17.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 25)
   =>
   (set-strategic-number sn-camp-max-distance 20)
   ;(chat-local-to-self "Camp distance 20.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time > 25)
   =>
   (set-strategic-number sn-camp-max-distance 22)
   ;(chat-local-to-self "Camp distance 22.")
   (disable-self)
)

;I added the next two rules as acts of desperation.  They rarely fire on a
;standard map.

(defrule
   (current-age == dark-age)
   (wood-amount > 200)
   (population > 19)
   (building-type-count-total lumber-camp == 0)
   =>
   (set-strategic-number sn-camp-max-distance 35)
   ;(chat-to-allies "Wood further away than 22 tiles!")
   ;(chat-local-to-self "Camp distance 35.")
   (disable-self)
)

(defrule
   (current-age == dark-age)
   (wood-amount > 200)
   (population > 21)
   (building-type-count-total lumber-camp == 0)
   =>
   (set-strategic-number sn-camp-max-distance 45)
   (chat-to-allies "Wood further away than 35 tiles!")
   ;(chat-local-to-self "Camp distance 45.")
   (disable-self)
)
;endregion
; A bit much for a lumber camp, but I guess it's robust, the rules above should mean we know where to build and we can build

(defrule
   (current-age == dark-age)
   (resource-found wood)
   (unit-type-count villager > 6)
   (building-type-count-total lumber-camp < 1)
   (can-build lumber-camp)
   =>
   (build lumber-camp)
)

(defrule
   (building-type-count-total lumber-camp > 0)
   (strategic-number sn-camp-max-distance < 35)
   =>
   (set-strategic-number sn-camp-max-distance 35)
   ;(chat-local-to-self "Camp distance 35.")
   (disable-self)
)

; Fix bad lumber camps
(defrule
   (current-age <= feudal-age)
   (building-type-count lumber-camp == 1)
   (dropsite-min-distance wood > 5)
   =>
   ;(chat-to-allies "Bad lumber camp.")
   (set-strategic-number sn-camp-max-distance 45)
   ;(chat-local-to-self "Camp distance 45.")
   (set-strategic-number sn-maximum-wood-drop-distance -1)
   (disable-self)
)

(defrule
   (building-type-count-total lumber-camp == 2)
   =>
   (set-strategic-number sn-maximum-wood-drop-distance 15)
   (disable-self)
)

(defrule
   (or(current-age >= feudal-age)
      (strategic-number sn-camp-max-distance == 45))
   (dropsite-min-distance wood > 5)
   (can-build lumber-camp)
   =>
   (build lumber-camp)
)

(defrule
   (current-age == feudal-age)
   (building-type-count-total blacksmith > 0)
   (or(building-type-count-total archery-range > 0)
      (building-type-count-total market > 0))
   (building-type-count-total lumber-camp < 2)
   (can-build lumber-camp)
   =>
   (build lumber-camp)
)

(defrule
   (current-age >= castle-age)
   (dropsite-min-distance wood > 3)
   (wood-amount > 800)
   (can-build lumber-camp)
   =>
   (build lumber-camp)
)

; If we have built a lumber camp, we can build mining camps. 
(defrule
   (building-type-count-total lumber-camp > 0)
   (strategic-number sn-camp-max-distance < 35)
   =>
   (set-strategic-number sn-camp-max-distance 35) ; sets farthest a camp can be placed from a Town Center
   ;(chat-local-to-self "Camp distance 35.")
   (disable-self)
)

(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal))
   (building-type-count-total barracks > 0) 
   (or(unit-type-count 579 > 0)   ;Male gold miner
      (unit-type-count 581 > 0))  ;Female gold miner 
   (resource-found gold)
   (building-type-count mining-camp < 10)
   (cc-players-unit-type-count 0 66 > 0) 
   (dropsite-min-distance gold > 5)
   (dropsite-min-distance gold < 255)
   (can-build mining-camp)
   =>
   (build mining-camp)
   (chat-local-to-self "Attempting to build mining camp after barracks.")
)

(defrule
   (current-age >= feudal-age)
   (building-type-count-total blacksmith > 0)
   (or(building-type-count-total archery-range > 0)
      (building-type-count-total market > 0))
   (resource-found stone)
   (building-type-count mining-camp < 10)
   (dropsite-min-distance stone > 5)
   ;(building-type-count-total mining-camp < 2)
   (can-build mining-camp)
   =>
   (build mining-camp)
   (chat-local-to-self "Attempting to build mining camp after blacksmith.")
)

(defrule
   (building-type-count-total mining-camp > 0)
   (dropsite-min-distance gold <= 5)
   =>
   (set-strategic-number sn-gold-dropsite-distance -1)
   (set-strategic-number sn-stone-dropsite-distance -1)
   (disable-self)
)
;endregion
(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal))
   (building-type-count-total barracks < 1)
   (not(goal g-feudal-strat gv-fast-castle)) ; Build a barracks while we advance if not Fast Castle
   (can-build barracks)
   =>
   (build barracks)
   (set-strategic-number sn-maximum-town-size 4) 
)

; (defrule ----> Restore this code if we go for a big infantry push late game
   ; (or(current-age > feudal-age)
	  ; (goal g-age-status gv-advancing-to-castle))
   ; (building-type-count-total barracks < 8)
   ; (goal g-train-sword gv-yes)
   ; (can-build barracks)
   ; (gold-amount > 200)
   ; (food-amount > 400)
   ; =>
   ; (build barracks)
   ; (set-strategic-number sn-maximum-town-size 6) 
; )

; Blacksmith associated with m@a rush
(defrule
	(current-age > dark-age)
	(building-type-count-total barracks > 0)
	(building-type-count-total blacksmith < 1)
	(goal g-feudal-strat gv-man-at-arms-rush)
	(can-build blacksmith)
	=>
	(build blacksmith)
	(set-strategic-number sn-maximum-town-size 4)
)
; M@A market is possible as a second advancement building if we want to keep infantry
(defrule
   (current-age > dark-age)
   (building-type-count-total blacksmith > 0)
   (building-type-count-total market < 1)
   (goal g-feudal-strat gv-man-at-arms-rush)
   (can-build market)
   (wood-amount >= 235) ;Don't lose farm building capability
   =>
   (build market)
   (set-strategic-number sn-maximum-town-size 4) 
)
; M@A archery range for skirmisher defense makes sure farms can be made
(defrule
   (current-age > dark-age)
   (building-type-count-total blacksmith > 0)
   (building-type-count-total archery-range < 1)
   (can-build archery-range)
   (goal g-feudal-strat gv-man-at-arms-rush)
   (wood-amount >= 235) ;Don't lose farm building capability
   =>
   (build archery-range)
   (set-strategic-number sn-maximum-town-size 4)
)

; Blacksmith associated with archer rush
(defrule
	(building-type-count-total archery-range > 1)
	(building-type-count-total blacksmith < 1)
	(goal g-feudal-strat gv-archer-rush)
	(can-build blacksmith)
	(wood-amount >= 200) ;build blacksmith only if we have wood for 2 archers left after
	=>
	(build blacksmith)
	(set-strategic-number sn-maximum-town-size 4)
)
; Archer rush archery ranges
(defrule
	(can-build archery-range)
	(goal g-feudal-strat gv-archer-rush)
	(building-type-count-total archery-range < 2)
	(current-age == feudal-age)
	=>
	(build archery-range)
	(set-strategic-number sn-maximum-town-size 6)
)
; Archer rush market calls for wood to be left over, not needed for Castle
(defrule
   (current-age > dark-age)
   (building-type-count-total blacksmith > 0)
   (building-type-count-total market < 1)
   (goal g-feudal-strat gv-archer-rush)
   (wood-amount >= 225) ;build market only if wood left for 2 archers
   (can-build market)
   =>
   (build market)
   (set-strategic-number sn-maximum-town-size 4) 
)

(defrule
   (or(current-age > feudal-age)
      (goal g-age-status gv-advancing-to-castle))
   (goal g-train-skirm gv-yes)
   (building-type-count-total archery-range < 2)
   (can-build archery-range)
   =>
   (build archery-range)
   (set-strategic-number sn-maximum-town-size 6)
)


(defrule
   (or(current-age > castle-age)
      (goal g-age-status gv-advancing-to-imperial))
   (or(goal g-train-skirm gv-yes)
		(goal g-imperial-strat gv-arbalesters))
   (building-type-count-total archery-range < 10)
   (wood-amount > 600)
   (gold-amount > 400)
   (not (up-train-site-ready c: archer))
   (can-build archery-range)
   =>
   (build archery-range)
   (up-modify-sn sn-maximum-town-size c: 1)
)

(defrule
   (can-build stable)
   (wood-amount > 375)
   (food-amount > 200)
   =>
   (build stable)
)

;If we are on offense build distant castle
(defrule
   (goal g-attack-stage gv-attacking)
   (soldier-count >= 40)
   (can-build castle)
   =>
   (build-forward castle)
)

;If we are on defense build castle at home
(defrule
   (can-build castle)
   =>
   (build castle)
   (set-strategic-number sn-maximum-town-size 6)
)



(defrule
   (building-type-count-total siege-workshop < 1)
   (can-build siege-workshop)
   (current-age >= castle-age)
   =>
   (build siege-workshop)
   (set-strategic-number sn-maximum-town-size 6)
)

(defrule
   (building-type-count-total town-center < 3)
   (current-age >= castle-age)
   (can-build town-center)
   =>
   (build town-center)
   (set-strategic-number sn-maximum-town-size 8)
)

(defrule
   (building-type-count-total university < 1)
   (can-build university)
   =>
   (build university)
   (set-strategic-number sn-maximum-town-size 6)
)

(defrule
   (building-type-count-total monastery < 1)
   (can-build monastery)
   =>
   (build monastery)
   (set-strategic-number sn-maximum-town-size 6)
)
;region ******************************* Farm Building ********************************

(defrule
   (goal g-age-status gv-dark-age)
   (building-type-count-total mill > 0)
   (building-type-count-total lumber-camp > 0)
;If (dropsite-min-distance wood > 5) then the first lumber
;camp was placed poorly.  Save the wood for a new lumber camp.
   (dropsite-min-distance wood < 6)
   (or(building-type-count-total farm < 2)
      (idle-farm-count == 0))
   (can-build farm)
   (wood-amount > 84) ; avoid getting housed
   =>
   (build farm)
)

(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal))
   (idle-farm-count == 0)
   (can-build farm)
   =>
   (build farm)
)
;endregion

;endregion

;region -----------> Military Superiority Analysis *************************************
;  Redefine strategic number 215 - Degree of military superiority.
;
;        -2 = There is an enemy that has at least 20 more military than I do.
;        -1 = There is an enemy that has at least 10 more military than I do.
;         0 = Every enemy is within 10 of my military.
;         1 = I have over 195 military or 10 more than every enemy.
;         2 = I have over 200 military or 20 more than every enemy.

(defrule  ;Initialize
   (true)
   =>
   (set-strategic-number sn-military-superiority 0)
)

(defrule
   (or(military-population > 195)
      (or(and(military-population > 190)
             (players-military-population every-enemy < 180))
          (or(and(military-population > 180)
                 (players-military-population every-enemy < 170))
             (and(military-population > 170)
                 (players-military-population every-enemy < 160)))))
   =>
   (set-strategic-number sn-military-superiority 1)
)

(defrule
   (or(and(military-population > 160)
          (players-military-population every-enemy < 150))
      (or(and(military-population > 150)
             (players-military-population every-enemy < 140))
          (or(and(military-population > 140)
                 (players-military-population every-enemy < 130))
             (and(military-population > 130)
                 (players-military-population every-enemy < 120)))))
   =>
   (set-strategic-number sn-military-superiority 1)
)

(defrule
   (or(and(military-population > 120)
          (players-military-population every-enemy < 110))
      (or(and(military-population > 110)
             (players-military-population every-enemy < 100))
          (or(and(military-population > 100)
                 (players-military-population every-enemy < 90))
             (and(military-population > 90)
                 (players-military-population every-enemy < 80)))))
   =>
   (set-strategic-number sn-military-superiority 1)
)

(defrule
   (or(and(military-population > 80)
          (players-military-population every-enemy < 70))
      (or(and(military-population > 70)
             (players-military-population every-enemy < 60))
          (or(and(military-population > 60)
                 (players-military-population every-enemy < 50))
             (and(military-population > 50)
                 (players-military-population every-enemy < 40)))))
   =>
   (set-strategic-number sn-military-superiority 1)
)

(defrule
   (or(and(military-population > 40)
          (players-military-population every-enemy < 30))
      (or(and(military-population > 30)
             (players-military-population every-enemy < 20))
          (or(and(military-population > 20)
                 (players-military-population every-enemy < 10))
             (and(military-population > 10)
                 (players-military-population every-enemy == 0)))))
   =>
   (set-strategic-number sn-military-superiority 1)
)

(defrule
   (or(military-population > 200)
      (or(and(military-population > 190)
             (players-military-population every-enemy < 170))
          (or(and(military-population > 180)
                 (players-military-population every-enemy < 160))
             (and(military-population > 170)
                 (players-military-population every-enemy < 150)))))
   =>
   (set-strategic-number sn-military-superiority 2)
)

(defrule
   (or(and(military-population > 160)
          (players-military-population every-enemy < 140))
      (or(and(military-population > 150)
             (players-military-population every-enemy < 130))
          (or(and(military-population > 140)
                 (players-military-population every-enemy < 120))
             (and(military-population > 130)
                 (players-military-population every-enemy < 110)))))
   =>
   (set-strategic-number sn-military-superiority 2)
)

(defrule
   (or(and(military-population > 120)
          (players-military-population every-enemy < 100))
      (or(and(military-population > 110)
             (players-military-population every-enemy < 90))
          (or(and(military-population > 100)
                 (players-military-population every-enemy < 80))
             (and(military-population > 90)
                 (players-military-population every-enemy < 70)))))
   =>
   (set-strategic-number sn-military-superiority 2)
)

(defrule
   (or(and(military-population > 80)
          (players-military-population every-enemy < 60))
      (or(and(military-population > 70)
             (players-military-population every-enemy < 50))
          (or(and(military-population > 60)
                 (players-military-population every-enemy < 40))
             (and(military-population > 50)
                 (players-military-population every-enemy < 30)))))
   =>
   (set-strategic-number sn-military-superiority 2)
)

(defrule
   (or(and(military-population > 40)
          (players-military-population every-enemy < 20))
      (or(and(military-population > 30)
             (players-military-population every-enemy < 10))
         (and(military-population > 20)
             (players-military-population every-enemy == 0))))
   =>
   (set-strategic-number sn-military-superiority 2)
)

(defrule
   (or(and(military-population == 0)
          (players-military-population any-enemy > 10))
      (or(and(military-population < 10)
             (players-military-population any-enemy > 20))
          (or(and(military-population < 20)
                 (players-military-population any-enemy > 30))
             (and(military-population < 30)
                 (players-military-population any-enemy > 40)))))
   =>
   (set-strategic-number sn-military-superiority -1)
)

(defrule
   (or(and(military-population < 40)
          (players-military-population any-enemy > 50))
      (or(and(military-population < 50)
             (players-military-population any-enemy > 60))
          (or(and(military-population < 60)
                 (players-military-population any-enemy > 70))
             (and(military-population < 70)
                 (players-military-population any-enemy > 80)))))
   =>
   (set-strategic-number sn-military-superiority -1)
)

(defrule
   (or(and(military-population < 80)
          (players-military-population any-enemy > 90))
      (or(and(military-population < 90)
             (players-military-population any-enemy > 100))
          (or(and(military-population < 100)
                 (players-military-population any-enemy > 110))
             (and(military-population < 110)
                 (players-military-population any-enemy > 120)))))
   =>
   (set-strategic-number sn-military-superiority -1)
)

(defrule
   (or(and(military-population < 120)
          (players-military-population any-enemy > 130))
      (or(and(military-population < 130)
             (players-military-population any-enemy > 140))
          (or(and(military-population < 140)
                 (players-military-population any-enemy > 150))
             (and(military-population < 150)
                 (players-military-population any-enemy > 160)))))
   =>
   (set-strategic-number sn-military-superiority -1)
)

(defrule
   (or(and(military-population < 160)
          (players-military-population any-enemy > 170))
      (or(and(military-population < 170)
             (players-military-population any-enemy > 180))
          (or(and(military-population < 180)
                 (players-military-population any-enemy > 190))
             (and(military-population < 190)
                 (players-military-population any-enemy > 200)))))
   =>
   (set-strategic-number sn-military-superiority -1)
)

(defrule
   (or(and(military-population == 0)
          (players-military-population any-enemy > 20))
      (or(and(military-population < 10)
             (players-military-population any-enemy > 30))
          (or(and(military-population < 20)
                 (players-military-population any-enemy > 40))
             (and(military-population < 30)
                 (players-military-population any-enemy > 50)))))
   =>
   (set-strategic-number sn-military-superiority -2)
)

(defrule
   (or(and(military-population < 40)
          (players-military-population any-enemy > 60))
      (or(and(military-population < 50)
             (players-military-population any-enemy > 70))
          (or(and(military-population < 60)
                 (players-military-population any-enemy > 80))
             (and(military-population < 70)
                 (players-military-population any-enemy > 90)))))
   =>
   (set-strategic-number sn-military-superiority -2)
)

(defrule
   (or(and(military-population < 80)
          (players-military-population any-enemy > 100))
      (or(and(military-population < 90)
             (players-military-population any-enemy > 110))
          (or(and(military-population < 100)
                 (players-military-population any-enemy > 120))
             (and(military-population < 110)
                 (players-military-population any-enemy > 130)))))
   =>
   (set-strategic-number sn-military-superiority -2)
)

(defrule
   (or(and(military-population < 120)
          (players-military-population any-enemy > 140))
      (or(and(military-population < 130)
             (players-military-population any-enemy > 150))
          (or(and(military-population < 140)
                 (players-military-population any-enemy > 160))
             (and(military-population < 150)
                 (players-military-population any-enemy > 170)))))
   =>
   (set-strategic-number sn-military-superiority -2)
)

(defrule
   (or(and(military-population < 160)
          (players-military-population any-enemy > 180))
      (or(and(military-population < 170)
             (players-military-population any-enemy > 190))
          (or(and(military-population < 180)
                 (players-military-population any-enemy > 200))
             (and(military-population < 190)
                 (players-military-population any-enemy > 210)))))
   =>
   (set-strategic-number sn-military-superiority -2)
)

; Adjust military superiority down by 1 if we are behind an age and say we want to age up
(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy > feudal-age)
	(strategic-number sn-military-superiority == -1)
	=>
	(set-strategic-number sn-military-superiority -2)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy > feudal-age)
	(strategic-number sn-military-superiority == 0)
	=>
	(set-strategic-number sn-military-superiority -1)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy > feudal-age)
	(strategic-number sn-military-superiority == 1)
	=>
	(set-strategic-number sn-military-superiority 0)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == feudal-age)
	(players-current-age any-enemy > feudal-age)
	(strategic-number sn-military-superiority == 2)
	=>
	(set-strategic-number sn-military-superiority 1)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == castle-age)
	(players-current-age any-enemy > castle-age)
	(strategic-number sn-military-superiority == -1)
	=>
	(set-strategic-number sn-military-superiority -2)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == castle-age)
	(players-current-age any-enemy > castle-age)
	(strategic-number sn-military-superiority == 0)
	=>
	(set-strategic-number sn-military-superiority -1)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == castle-age)
	(players-current-age any-enemy > castle-age)
	(strategic-number sn-military-superiority == 1)
	=>
	(set-strategic-number sn-military-superiority 0)
	(set-goal g-want-next-age gv-yes)
)
(defrule
	(current-age == castle-age)
	(players-current-age any-enemy > castle-age)
	(strategic-number sn-military-superiority == 2)
	=>
	(set-strategic-number sn-military-superiority 1)
	(set-goal g-want-next-age gv-yes)
)

;endregion

;region -----------> Training **********************************************************
(defrule
   (goal g-age-status gv-dark-age)
   (unit-type-count-total villager >= rush-num-dark-villagers)
   (goal g-train-villager gv-yes)
   =>
   (set-goal g-train-villager gv-no)
)

(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal))
   (goal g-train-villager gv-no)
   (unit-type-count-total villager <= 100)
   =>
   (set-goal g-train-villager gv-yes)
)

(defrule
   (current-age > dark-age)
   (unit-type-count-total villager >= 100)
   (goal g-train-villager gv-yes)
   =>
   (set-goal g-train-villager gv-no)
)

(defrule
	(goal g-age-status gv-advancing-to-feudal)
	(goal g-feudal-strat gv-man-at-arms-rush)
	(goal g-train-sword gv-no)
   =>
   (set-goal g-train-sword gv-yes)
   (chat-local-to-self "Training while advancing to feudal.")
)

(defrule
   (current-age == feudal-age)
   (or(research-available ri-man-at-arms)
      (research-available ri-supplies))
   (goal g-train-sword gv-yes)
   (goal g-feudal-strat gv-man-at-arms-rush)
   (unit-type-count militiaman-line > 1)
   =>
   (set-goal g-train-sword gv-no)
   (chat-local-to-self "Stop training swords to get m@a and supplies.")
)

(defrule
   (current-age == feudal-age)
   (not(research-available ri-man-at-arms))
   (goal g-train-sword gv-no)
   (goal g-feudal-strat gv-man-at-arms-rush)
   =>
   (set-goal g-train-sword gv-yes)
)

(defrule
	(goal g-age-status gv-advancing-to-castle)
   (not(research-available ri-man-at-arms))
   (not(research-available ri-supplies))
   (goal g-train-sword gv-no)
	
   (goal g-castle-strat gv-longswords)
	=>
	(set-goal g-train-sword gv-yes)
)

(defrule
   (current-age == castle-age)
   (or(not(research-available ri-long-swordsman))
      (town-under-attack))
   (goal g-train-sword gv-no)
   (goal g-castle-strat gv-longswords)
   =>
   (set-goal g-train-sword gv-yes)
   (chat-local-to-self "Training long swords after getting it or m@a due to attack.")
)

;Only train spears if we detect cavalry or are under attack and can't mak swordsmen.
(defrule
   (goal g-train-spear gv-yes)
   =>
   (set-goal g-train-spear gv-no)
)

;   UPDATE: Outdated, add other unique cavalry and the battle elephant line
;    UPDATE: More effective to detect stables and make it dependent on age and numbers, we would also want spears against light cav
(defrule
   (goal g-train-spear gv-no)
   (or(players-unit-type-count any-enemy knight-line > 0)
   (or(players-unit-type-count any-enemy camel-line > 1)
   (or(players-unit-type-count any-enemy war-elephant-line > 0)
   (or(players-unit-type-count any-enemy cataphract-line > 0)
   (or(players-unit-type-count any-enemy tarkan-line > 0)
   (or(players-unit-type-count any-enemy conquistador-line > 0)
      (players-unit-type-count any-enemy war-wagon-line > 0)))))))
   =>
   (set-goal g-train-spear gv-yes)
)

(defrule
   (timer-triggered t-gather-idle-soldiers)
   (town-under-attack)
   (strategic-number 215 < 0)      ;We're outnumbered!
   (not(can-train militiaman-line))
   =>
   (set-goal g-train-spear gv-yes)
)

;Only train skirmishers if there are archers, lots of monks, or we are being attacked
;UPDATE: Add new unique stuff. Add hand cannoneer.
(defrule
   (goal g-train-skirm gv-yes)
   =>
   (set-goal g-train-skirm gv-no)
)

(defrule
   (goal g-train-skirm gv-no)
   (or(players-unit-type-count any-enemy archer-line > 0)
   (or(players-unit-type-count any-enemy cavalry-archer-line > 0)
   (or(players-unit-type-count any-enemy longbowman-line > 0)
   (or(players-unit-type-count any-enemy war-wagon-line > 0)
   (or(players-unit-type-count any-enemy chu-ko-nu-line > 0)
   (or(players-unit-type-count any-enemy plumed-archer-line > 0)
      (players-unit-type-count any-enemy mangudai-line > 0)))))))
   =>
   (set-goal g-train-skirm gv-yes)
)

(defrule
   (goal g-train-skirm gv-no)
   (or(players-unit-type-count any-enemy missionary > 5)
      (players-unit-type-count any-enemy monk > 5))
   =>
   (set-goal g-train-skirm gv-yes)
)

(defrule
   (timer-triggered t-gather-idle-soldiers)
   (town-under-attack)
   (strategic-number 215 < 0)   ;We're outnumbered!
   =>
   (set-goal g-train-skirm gv-yes)
)

;Stop training villagers when we want to age up
;(defrule
;   (goal g-want-next-age gv-yes)
;   (strategic-number 215 > -2)   ;We're not way outnumbered.
;   (unit-type-count-total villager >= rush-num-dark-villagers)
;   =>
;  (set-goal g-train-villager gv-no)
;)

;Stop training units if we are not being attacked and want to age
(defrule
   (goal g-want-next-age gv-yes)
   (not(town-under-attack))
   (strategic-number 215 > -2)   ;We're not way outnumbered.
   =>
   (set-goal g-train-sword gv-no)
   (set-goal g-train-spear gv-no)
   (set-goal g-train-skirm gv-no)
   (set-goal g-train-unique gv-no)
   (set-goal g-train-knight gv-no)
   ;(chat-local-to-self "Stop training to age up")
)

(defrule
   (or(goal g-want-next-age gv-no)
		(town-under-attack))
   (unit-type-count-total villager <= 100)
   =>
   (set-goal g-train-villager gv-yes)
   ;(set-goal g-train-sword gv-yes)
)

(defrule
   (goal g-train-villager gv-yes)
   (can-train villager)
   =>
   (train villager)
)

(defrule
   (unit-type-count-total battering-ram-line < 5)
   (can-train battering-ram-line)
   =>
   (train battering-ram-line)
)

(defrule
   (unit-type-count-total armored-elephant-line < 5)
   (can-train armored-elephant-line)
   =>
   (train armored-elephant-line)
)

; (defrule
   ; (goal g-train-sword gv-yes)
   ; (can-train militiaman-line)
   ; (not(research-available ri-man-at-arms))
   ; (not(research-available ri-long-swordsman))
   ; (or 
	 ; (and(current-age <= feudal-age)
		   ; (unit-type-count militiaman-line <= max-num-feudal-swords))
	  ; (or(current-age > feudal-age)
		 ; (goal g-age-status gv-advancing-to-castle)))
   ; =>
   ; (train militiaman-line)
; )

(defrule
	(current-age == feudal-age)
	(goal g-feudal-strat gv-archer-rush)
	(unit-type-count-total archer-line < max-num-feudal-archers)
	(can-train archer-line)
	=>
	(train archer-line)
)

(defrule
	(current-age == feudal-age)
	(goal g-castle-strat gv-crossbows)
	(gold-amount > 245)
	(not(research-available ri-fletching))
	(can-train archer-line)
	=>
	(train archer-line)
)

(defrule
	(or(goal g-age-status gv-advancing-to-castle)
		(current-age == castle-age))
	(goal g-castle-strat gv-crossbows)
	(can-train archer-line)
	(or(gold-amount > 225)
	(up-research-status c: ri-crossbow >= research-pending))
	=>
	(train archer-line)
)

(defrule
	(or(goal g-age-status gv-advancing-to-imperial)
		(current-age == imperial-age))
	(goal g-imperial-strat gv-arbalesters)
	(can-train archer-line)
	=>
	(train archer-line)
)

(defrule
   (goal g-train-spear gv-yes)
   (can-train spearman-line)
   =>
   (train spearman-line)
)

(defrule
   (goal g-train-skirm gv-yes)
   (can-train skirmisher-line)
   (or (not(goal g-castle-strat gv-crossbows));ensure we only create skimrs if we don't want crossbows or are lacking gold
		(gold-amount < 50))
   =>
   (train skirmisher-line)
)

(defrule
   (unit-type-count-total monk < 2)
   (can-train monk)
   =>
   (train monk)
)

(defrule
   (unit-type-count-total monk < 4)
   (can-train monk)
   (players-unit-type-count any-enemy knight-line > 5)
   =>
   (train monk)
)

(defrule
   (unit-type-count-total monk < 6)
   (can-train monk)
   (players-unit-type-count any-enemy knight-line > 10)
   =>
   (train monk)
)

(defrule
   (can-train scout-cavalry-line)
   (or (food-amount > 1100)
      (and (or (goal g-age-status gv-advancing-to-imperial)
		         (current-age == imperial-age))
            (food-amount > 200 )))
   =>
   (train scout-cavalry-line)
)



;endregion

;region -----------> Town Size Control *************************************************
;Still using Bears town size expansion:
(load "Silver/TownSizing")
;endregion

;region -----------> Defending *********************************************************
(defrule
   (town-under-attack)
   (strategic-number sn-enemy-sighted-response-distance == 2)
   (goal g-tsa gv-off)
   =>
   (set-strategic-number sn-enemy-sighted-response-distance 144) ;Maximum
   (set-strategic-number sn-target-evaluation-siege-weapon 100)
)

(defrule
   (or(not(town-under-attack))
      (goal g-tsa gv-on))
   (strategic-number sn-enemy-sighted-response-distance == 144)
   =>
   (set-strategic-number sn-enemy-sighted-response-distance 2) ;On Sight Only
   (set-strategic-number sn-target-evaluation-siege-weapon 0)
)

;endregion

;region -----------> Attacking *********************************************************

;If we see a castle is being built or is had, we go for the castle age and ask for rams
(defrule
   (goal g-age-status gv-feudal-age)
   (or(game-time > 1320)
      (and(players-civ any-enemy teutonic)
          (game-time > 1200)))
   (players-building-type-count any-enemy castle > 0)
   =>
   (set-goal g-want-next-age gv-yes)
   (set-goal g-need-siege gv-yes)
   (chat-to-allies "We need the castle age for battering rams.")
)

(defrule
   (or(game-time > 1320)
      (and(players-civ any-enemy teutonic)
          (game-time > 1200)))
   (players-building-type-count any-enemy castle > 0)
   (goal g-need-siege gv-no)
   =>
   (set-goal g-need-siege gv-yes)
)

(defrule
   (goal g-need-siege gv-yes)
   (or(unit-type-count battering-ram-line > 0)
   (unit-type-count armored-elephant-line > 0))
   =>
   (set-goal g-need-siege gv-no)
)

;region -------------------> TSA Attack Style ******************************************

;We attack if militaries are equal
(defrule
   (current-age >= feudal-age)
   (game-time <= 1200)
   (strategic-number sn-military-superiority > -1) ;We have military equality!
   (goal g-tsa gv-off)
   (goal g-attack-style gv-tsa)
   =>
   (set-goal g-tsa gv-on)
   (chat-to-allies "We have military equality.  Starting TSA.")
)

;We retreat if we are losing
(defrule
   (game-time <= 1200)
   (strategic-number sn-military-superiority < 0) ;We lost military equality!
   (goal g-tsa gv-on)
   (goal g-attack-style gv-tsa)
   =>
   (set-goal g-tsa gv-off)
   (chat-to-allies "We lost military equality.  Stopping TSA.")
   (set-strategic-number sn-maximum-town-size 16)
   (set-strategic-number sn-gather-idle-soldiers-at-center 1)
   (disable-timer t-gather-idle-soldiers)
   (enable-timer t-gather-idle-soldiers tv-gather-idle-soldiers)
)

(defrule
   (current-age >= feudal-age)
   (goal g-need-siege gv-no)
   (game-time > 1200)
   (strategic-number sn-military-superiority > 0) ;We have military superiority!
   (goal g-tsa gv-off)
   (goal g-attack-style gv-tsa)
   =>
   (set-goal g-tsa gv-on)
   (chat-to-allies "We have military superiority.  Starting Town Size Aggression.")
)

(defrule
   (game-time > 1200)
   (or(strategic-number 215 < 1) ;We lost military superiority!
      (goal g-need-siege gv-yes))
   (goal g-tsa gv-on)
   (goal g-attack-style gv-tsa)
   =>
   (set-goal g-tsa gv-off)
   (chat-to-allies "We lost military superiority.  Stopping Town Size Aggression.")
   (set-strategic-number sn-maximum-town-size 16)
   (set-strategic-number sn-gather-idle-soldiers-at-center 1)
   (disable-timer t-gather-idle-soldiers)
   (enable-timer t-gather-idle-soldiers tv-gather-idle-soldiers)
)

(defrule
   (timer-triggered t-gather-idle-soldiers)
   (strategic-number sn-gather-idle-soldiers-at-center == 1)
   =>
   (set-strategic-number sn-gather-idle-soldiers-at-center 0)
)

(defrule
   (goal g-tsa gv-on)
   (goal g-attack-style gv-tsa)
   (not(players-building-count any-enemy > 0))
   =>
   (set-strategic-number sn-percent-civilian-explorers 0)
   (set-strategic-number sn-minimum-civilian-explorers 0)
   (set-strategic-number sn-cap-civilian-explorers 0)
   (set-strategic-number sn-total-number-explorers 3)
   (set-strategic-number sn-number-explore-groups 3)
)

(defrule
   (or(players-building-count any-enemy > 0)
	   (goal g-tsa gv-off))
   (goal g-attack-style gv-tsa)
   =>
   (set-strategic-number sn-percent-civilian-explorers 0)
   (set-strategic-number sn-minimum-civilian-explorers 0)
   (set-strategic-number sn-cap-civilian-explorers 0)
   (set-strategic-number sn-total-number-explorers 1)
   (set-strategic-number sn-number-explore-groups 1)
)
;endregion

;region -------------------> DUC Attacks ***********************************************
;First, set a point as our staging area between us and the enemy
;*********Pick an enemy
;*********Set our staging location between us and them and set the distance between us and them
(defrule
	(or (goal g-feudal-strat gv-archer-rush)
		(or (goal g-feudal-strat gv-scout-rush)
			(or (goal g-feudal-strat gv-man-at-arms-rush)
				(goal g-feudal-strat gv-tower-rush))))
	(current-age == feudal-age)
	(goal g-target-enemy -1)
	=>
	(up-find-player enemy find-closest g-target-enemy)
	(up-modify-sn sn-focus-player-number g:= g-target-enemy)
	(set-goal g-attack-style gv-tap) ;THIS HAS BEEN CHANGED TO SUPPORT TAP FOR THE FEUDAL AGE
	(up-chat-data-to-player my-player-number "I am targeting player %d." s: sn-focus-player-number)
)

(defrule
	(current-age == feudal-age)
    (goal g-attack-style gv-tap) ;THIS HAS BEEN CHANGED TO SUPPORT TAP FOR THE FEUDAL AGE
	(goal g-enemy-distance -1)
	=>
	(up-full-reset-search)
	(up-find-remote c: town-center c: 1)
	(up-find-remote c: house c: 1)
	(up-find-remote c: mill c: 1)
)

(defrule
	(current-age == feudal-age)
    (goal g-attack-style gv-tap) ;THIS HAS BEEN CHANGED TO SUPPORT TAP FOR THE FEUDAL AGE
	(goal g-enemy-distance -1)
	(up-set-target-object search-remote c: 0)
	=>
	(up-get-point position-object g-enemy-point-x)
	(up-get-point-distance g-self-point-x g-enemy-point-x g-enemy-distance)
	(up-chat-data-to-player my-player-number "Enemy distance is %d" g: g-enemy-distance)
)

(defrule
	(not (goal g-enemy-distance -1))
	(goal g-attack-stage gv-waiting)
	(current-age == feudal-age)
    (goal g-attack-style gv-duc)
	=>
	(up-copy-point g-stage-point-x g-self-point-x)
	(up-lerp-percent g-stage-point-x g-enemy-point-x c: 50)
	(up-modify-goal g-math-A g:= g-enemy-distance)
	(up-modify-goal g-math-A c:%* 50)
	(up-modify-goal g-math-A c:- 3)
	(up-chat-data-to-player my-player-number "Search radius is %d" g: g-math-A)
	(up-send-flare g-stage-point-x)
	(set-goal g-attack-stage gv-staged)
)

(defrule
	(up-compare-goal g-math-A < 1)
    (goal g-attack-style gv-duc)
	=>
	(set-goal g-attack-stage gv-waiting)
)

(defrule
	(goal g-attack-stage gv-staged)
	(unit-type-count archer-line >= 4)
    (goal g-attack-style gv-duc)
	=>
	(up-full-reset-search)
	(up-find-local c: archer-line c: 10)
	(up-target-point g-stage-point-x action-default 4 2)
	(chat-local-to-self "Sending archers to staging point.")
)

;region ---------------------------> Archer Rush ***************************************
;First attempt at using DUC to attack. We grab our archers and go look for exposed villagers
(defrule ;get the position of the nearest enemy's lumbercamps, mills, and mining camps, sort closest to farthest from staging point
	(goal g-feudal-strat gv-archer-rush)
	(unit-type-count archer-line >= max-num-feudal-archers)
	(current-age == feudal-age)
    (goal g-attack-style gv-duc)
	(goal g-attack-stage gv-staged)
	=>
	(up-find-player enemy find-closest g-target-enemy)
	(up-modify-sn sn-focus-player-number g:= g-target-enemy)
	(up-full-reset-search)
	(up-set-target-point g-stage-point-x)
	(up-filter-distance c: 0 g: g-math-A) ;Attempts to find a lumber camp closer to the staging point than to the TC attack range
	(up-find-remote c: lumber-camp c: 5)
	(up-find-remote c: mining-camp c: 5)
	(up-clean-search search-remote object-data-distance search-order-asc)
)
	
(defrule
	(up-set-target-object search-remote c: 0)
	(goal g-attack-style gv-duc)
	(goal g-attack-stage gv-staged)
	=>
	(up-get-point position-object g-attack-focus-point-x)
	(up-chat-data-to-player my-player-number "Target X is %d" g: g-attack-focus-point-x)
	(up-chat-data-to-player my-player-number "Target Y is %d" g: g-attack-focus-point-y)
	(up-send-flare g-attack-focus-point-x)
	(set-goal g-attack-stage gv-targeted)
)
;Send archers forward to target
(defrule
	(goal g-feudal-strat gv-archer-rush)
	(unit-type-count archer-line >= max-num-feudal-archers)
	(current-age == feudal-age)
    (goal g-attack-style gv-duc)
	(goal g-attack-stage gv-targeted)
	=>
	(up-full-reset-search)
	(up-find-local c: archer-line c: 10)
	(up-target-point g-attack-focus-point-x action-default 4 2)
	(up-create-group 0 0 c: front-attack-group)
	(up-send-flare g-attack-focus-point-x)
	(set-goal g-attack-stage gv-sending)
)

;Once we are close to the target, we start looking for vills
(defrule
	(goal g-feudal-strat gv-archer-rush)
	(goal g-attack-stage gv-sending)
    (goal g-attack-style gv-duc)
	=>
	(up-set-group search-local c: front-attack-group)
)


(defrule
	(goal g-feudal-strat gv-archer-rush)
	(goal g-attack-stage gv-sending)
    (goal g-attack-style gv-duc)
	=>
	(up-full-reset-search)
	(up-set-target-point g-attack-focus-point-x)
	(up-filter-distance c: 0 c: 5)
	(up-find-remote c: villager-class c: 5)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-clean-search search-remote object-data-hitpoints search-order-asc)
)


	
(defrule
	(up-set-target-object search-remote c: 0)
    (goal g-attack-style gv-duc)
	=>
	(up-remove-objects search-remote -1 > 0)
	(up-target-objects 1 action-default -1 -1)
)

;---------------------------> Tech Advantage Patrol ***************************************

; Enemy was chosen in the DUC section above

;Use DUC to select all military units and attack with patrol


; Discover target location and calculate their distance
(defrule
	(current-age == feudal-age)
    (goal g-attack-style gv-tap)
	(or (goal g-enemy-distance -1)
	(timer-triggered t-reinforce-attack))
	=>
	(up-full-reset-search)
	(up-find-remote c: town-center c: 1)
	(up-find-remote c: house c: 1)
	(up-find-remote c: mill c: 1)
)

(defrule
	(current-age == feudal-age)
    (goal g-attack-style gv-tap)
	(or (goal g-enemy-distance -1)
	(timer-triggered t-reinforce-attack))
	(up-set-target-object search-remote c: 0)
	=>
	(up-get-point position-object g-enemy-point-x)
	(up-get-point-distance g-self-point-x g-enemy-point-x g-enemy-distance)
	(up-chat-data-to-player my-player-number "Enemy distance is %d" g: g-enemy-distance)
)

(defrule
	(current-age >= feudal-age)
	(goal g-enemy-distance -1)
	=>
	(up-get-point position-center gl-center-x)
	(up-copy-point g-enemy-point-x g-self-point-x)
	(up-lerp-percent g-enemy-point-x gl-center-x c: 200)
	(up-get-point-distance g-self-point-x g-enemy-point-x g-enemy-distance)
	(chat-local-to-self "Failsafe activated, probably because enemy not scouted.")
	(up-chat-data-to-player my-player-number "Enemy distance is %d" g: g-enemy-distance)
)

; Define a staging point near the edge of our base toward the enemy
(defrule
	(not (goal g-enemy-distance -1))
	(goal g-attack-stage gv-waiting)
	(current-age == feudal-age)
    (goal g-attack-style gv-tap)
	=>
	(up-copy-point g-stage-point-x g-self-point-x)
	(up-lerp-percent g-stage-point-x g-enemy-point-x c: 25)
	(up-send-flare g-stage-point-x)
	(set-goal g-attack-stage gv-staged)
)


;(defrule
;	(goal g-attack-stage gv-staged)
;	(unit-type-count archer-line >= 4)
;	(goal g-feudal-strat gv-archer-rush)
;   (goal g-attack-style gv-tap)
;	=>
;	(up-full-reset-search)
;	(up-find-local c: archer-line c: 10)
;	(up-target-point g-stage-point-x action-default -1 -1)
;	(chat-local-to-self "Sending archers to staging point.")
;)

	
;Send archers forward to target with patrol move to their TC
(defrule
	(goal g-feudal-strat gv-archer-rush)
	(unit-type-count archer-line >= max-num-feudal-archers)
	(current-age == feudal-age)
    (goal g-attack-style gv-tap)
	(goal g-attack-stage gv-staged)
	(research-completed ri-fletching)
	=>
	(up-full-reset-search)
	(up-find-local c: archer-line c: 10)
	(up-find-local c: spearman-line c: 10)
	(up-remove-objects search-local object-data-idling != 1) ; Removes all non-idle units from the search
	(up-target-point g-enemy-point-x action-patrol -1 -1)
	(up-send-flare g-enemy-point-x)
	(set-goal g-attack-stage gv-sending)
)

(defrule
	(current-age >= castle-age)
    (goal g-attack-style gv-tap)
	(or (goal g-enemy-distance -1)
	(timer-triggered t-reinforce-attack))
	=>
	(up-full-reset-search)
	(up-find-remote c: town-center c: 1)
	(up-find-remote c: house c: 1)
	(up-find-remote c: mill c: 1)
)

(defrule
	(current-age >= castle-age)
    (goal g-attack-style gv-tap) 
	(or (goal g-enemy-distance -1)
	(timer-triggered t-reinforce-attack))
	(up-set-target-object search-remote c: 0)
	=>
	(up-get-point position-object g-enemy-point-x)
	(up-get-point-distance g-self-point-x g-enemy-point-x g-enemy-distance)
	(up-chat-data-to-player my-player-number "Enemy distance is %d" g: g-enemy-distance)
)

;Send whatever crossbows and spears we have as soon as we have bodkin and crossbow
(defrule
	(goal g-castle-strat gv-crossbows)
	(unit-type-count archer-line >= attack-group-size-crossbows)
	(current-age == castle-age)
    (goal g-attack-style gv-tap)
	(research-completed ri-bodkin-arrow)
	(research-completed ri-crossbow)
	(not (goal g-attack-stage gv-attacking))
	=>
	(up-full-reset-search)
	(up-find-local c: archer-line c: 50)
	(up-find-local c: spearman-line c: 10)
	(up-find-local c: skirmisher-line c: 30)
	(up-remove-objects search-local object-data-idling != 1) ; Removes all non-idle units from the search
	(up-target-point g-enemy-point-x action-patrol -1 -1)
	(enable-timer t-reinforce-attack tv-two-minute)
	(up-send-flare g-enemy-point-x)
	(set-goal g-attack-stage gv-attacking)
	(chat-local-to-self "First crossbowmen being sent after upgrades.")
)

;Send more waves when we have many idle military or when we have rams
(defrule
	(goal g-castle-strat gv-crossbows)
	(soldier-count >= reinforce-group-size-crossbows)
	(current-age >= castle-age)
    (goal g-attack-style gv-tap)
	(goal g-attack-stage gv-attacking)
	(timer-triggered t-reinforce-attack)
	=>
	(up-full-reset-search)
	(up-find-local c: archery-class c: 60)
	(up-find-local c: infantry-class c: 60)
	(up-find-local c: siege-weapon-class c: 30)
   (up-find-local c: armored-elephant-line c: 30)
	(up-remove-objects search-local object-data-idling != 1) ; Removes all non-idle units from the search
	(up-target-point g-enemy-point-x action-patrol -1 -1)
	(up-send-flare g-enemy-point-x)
	(set-goal g-attack-stage gv-attacking)
	(enable-timer t-reinforce-attack tv-two-minute)
	(chat-local-to-self "Sending a reinforcing wave.")
	(up-chat-data-to-player my-player-number "Target X is %d" g: g-enemy-point-x)
	(up-chat-data-to-player my-player-number "Target Y is %d" g: g-enemy-point-y)
	(up-chat-data-to-player my-player-number "Target Distance is %d" g: g-enemy-distance)
)


;endregion

;endregion

;endregion

;region -----------> Pass Incrementing *************************************************
(defrule
	(up-compare-goal g-code-pass < gv-pass-ten)
	=>
	(up-modify-goal g-code-pass c:+ 1)
)

(defrule
	(up-compare-goal g-code-pass == gv-pass-ten)
	=>
	(set-goal g-code-pass gv-pass-one)
)

;endregion

;endregion 

(load "Silver/ResignRules")